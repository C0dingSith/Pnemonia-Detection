{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1QD-QweyzUfwyOzzBvyTTpBt9NRHqrfy-","timestamp":1678636656872}],"collapsed_sections":["VdJhwDjBb1U_","45zKW1NjS4aV"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"TiM6gYg0nhkY"},"source":["<font color=\"#de3023\"><h1><b>REMINDER MAKE A COPY OF THIS NOTEBOOK, DO NOT EDIT</b></h1></font>"]},{"cell_type":"markdown","metadata":{"id":"Nim7KW49HbU5"},"source":["![](https://storage.googleapis.com/kaggle-competitions/kaggle/10338/logos/header.png)"]},{"cell_type":"markdown","metadata":{"id":"fPcvBlSiLXng"},"source":["In this notebook, we'll try out our model on field data - data outside our normal testing and training data! We'll also learn techniques for data augmentation, creating new \"fake data\" so that our model can generalize more effectively."]},{"cell_type":"markdown","metadata":{"id":"Tsa9kzHFh4yU"},"source":["In this notebook we'll be:\n","1.   Putting our ML models into practice\n","2.   Improving our ML models\n","\n"]},{"cell_type":"code","metadata":{"id":"LFWVfZctvmPS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678636691579,"user_tz":420,"elapsed":11997,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"da244596-49a8-403f-8d3c-5302f263f06c"},"source":["#@title Run this to download data and prepare our environment! { display-mode: \"form\" }\n","# %tensorflow_version 1.x\n","import random\n","\n","import os\n","import numpy as np\n","import pandas as pd\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","from sklearn.metrics import accuracy_score, confusion_matrix\n","\n","import tensorflow.keras as keras\n","from keras.models import Sequential\n","from keras.layers import Activation, MaxPooling2D, Dropout, Flatten, Reshape, Dense, Conv2D, GlobalAveragePooling2D\n","from keras.regularizers import l2\n","from keras.wrappers.scikit_learn import KerasClassifier\n","import tensorflow.keras.optimizers as optimizers\n","from keras.callbacks import ModelCheckpoint\n","\n","from keras.applications.vgg16 import VGG16\n","from keras.applications.vgg19 import VGG19\n","from tensorflow.keras.applications.resnet50 import ResNet50\n","from keras.applications.densenet import DenseNet121\n","\n","from imgaug import augmenters \n","def augment(data, augmenter):\n","  if len(data.shape) == 3:\n","    return augmenter.augment_image(data)\n","  if len(data.shape) == 4:\n","    return augmenter.augment_images(data)\n","    \n","def rotate(data, rotate):\n","  fun = augmenters.Affine(rotate = rotate)\n","  return augment(data, fun)\n","\n","def shear(data, shear):\n","  fun = augmenters.Affine(shear = shear)\n","  return augment(data, fun)\n","\n","def scale(data, scale):\n","  fun = augmenters.Affine(scale = scale)\n","  return augment(data, fun)\n","  \n","def flip_left_right(data, prob):\n","  fun = augmenters.Fliplr(p = prob)\n","  return augment(data, fun)\n","\n","def flip_up_down(data, prob):\n","  fun = augmenters.Flipud(p = prob)\n","  return augment(data, fun)\n","\n","def remove_color(data, channel):\n","  new_data = data.copy()\n","  if len(data.shape) == 3:\n","    new_data[:,:,channel] = 0\n","    return new_data\n","  if len(data.shape) == 4:\n","    new_data[:,:,:,channel] = 0\n","    return new_data\n","  \n","class pkg:\n","  #### DOWNLOADING AND LOADING DATA\n","  def get_metadata(metadata_path, which_splits = ['train', 'test']):  \n","    '''returns metadata dataframe which contains columns of:\n","       * index: index of data into numpy data\n","       * class: class of image\n","       * split: which dataset split is this a part of? \n","    '''\n","    metadata = pd.read_csv(metadata_path)\n","    keep_idx = metadata['split'].isin(which_splits)\n","    return metadata[keep_idx]\n","\n","  def get_data_split(split_name, flatten, all_data, metadata, image_shape):\n","    '''\n","    returns images (data), labels from folder of format [image_folder]/[split_name]/[class_name]/\n","    flattens if flatten option is True \n","    '''\n","    sub_df = metadata[metadata['split'].isin([split_name])]\n","    index  = sub_df['index'].values\n","    labels = sub_df['class'].values\n","    data = all_data[index,:]\n","    if flatten:\n","      data = data.reshape([-1, np.product(image_shape)])\n","    return data, labels\n","\n","  def get_train_data(flatten, all_data, metadata, image_shape):\n","    return get_data_split('train', flatten, all_data, metadata, image_shape)\n","\n","  def get_test_data(flatten, all_data, metadata, image_shape):\n","    return get_data_split('test', flatten, all_data, metadata, image_shape)\n","\n","  def get_field_data(flatten, all_data, metadata, image_shape):\n","    field_data, field_labels = get_data_split('field', flatten, all_data, metadata, image_shape)\n","    field_data[:,:,:,2] = field_data[:,:,:,0]\n","    field_data[:,:,:,1] = field_data[:,:,:,0]\n","\n","    #make data messier\n","    rand = random.uniform(-1, 1)\n","    \n","    for i in range(len(field_data)):\n","      image = field_data[i]\n","                            \n","      if abs(rand) < 0.5:\n","        image = rotate(image, rotate = rand * 40)\n","      elif abs(rand) < 0.8:\n","        image = shear(image, shear = rand*40)\n","      field_data[i] = image \n","    return field_data, field_labels\n","\n","class helpers:\n","  #### PLOTTING\n","  def plot_one_image(data, labels = [], index = None, image_shape = [64,64,3]):\n","    '''\n","    if data is a single image, display that image\n","\n","    if data is a 4d stack of images, display that image\n","    '''\n","    num_dims   = len(data.shape)\n","    num_labels = len(labels)\n","\n","    # reshape data if necessary\n","    if num_dims == 1:\n","      data = data.reshape(target_shape)\n","    if num_dims == 2:\n","      data = data.reshape(np.vstack[-1, image_shape])\n","    num_dims   = len(data.shape)\n","\n","    # check if single or multiple images\n","    if num_dims == 3:\n","      if num_labels > 1:\n","        print('Multiple labels does not make sense for single image.')\n","        return\n","\n","      label = labels      \n","      if num_labels == 0:\n","        label = ''\n","      image = data\n","\n","    if num_dims == 4:\n","      image = data[index, :]\n","      label = labels[index]\n","\n","    # plot image of interest\n","    print('Label: %s'%label)\n","    plt.imshow(image)\n","    plt.show()\n","\n","  #### QUERYING AND COMBINING DATA\n","  def combine_data(data_list, labels_list):\n","    return np.concatenate(data_list, axis = 0), np.concatenate(labels_list, axis = 0)\n","\n","  def plot_acc(history, ax = None, xlabel = 'Epoch #'):\n","    # i'm sorry for this function's code. i am so sorry. \n","    history = history.history\n","    history.update({'epoch':list(range(len(history['val_accuracy'])))})\n","    history = pd.DataFrame.from_dict(history)\n","\n","    best_epoch = history.sort_values(by = 'val_accuracy', ascending = False).iloc[0]['epoch']\n","\n","    if not ax:\n","      f, ax = plt.subplots(1,1)\n","    sns.lineplot(x = 'epoch', y = 'val_accuracy', data = history, label = 'Validation', ax = ax)\n","    sns.lineplot(x = 'epoch', y = 'accuracy', data = history, label = 'Training', ax = ax)\n","    ax.axhline(0.5, linestyle = '--',color='red', label = 'Chance')\n","    ax.axvline(x = best_epoch, linestyle = '--', color = 'green', label = 'Best Epoch')  \n","    ax.legend(loc = 4)    \n","    ax.set_ylim([0.4, 1])\n","\n","    ax.set_xlabel(xlabel)\n","    ax.set_ylabel('Accuracy (Fraction)')\n","    \n","    plt.show()\n","\n","class models:\n","  def DenseClassifier(hidden_layer_sizes, nn_params):\n","    model = Sequential()\n","    model.add(Flatten(input_shape = nn_params['input_shape']))\n","    model.add(Dropout(0.5))\n","\n","    for ilayer in hidden_layer_sizes:\n","      model.add(Dense(ilayer, activation = 'relu'))\n","      model.add(Dropout(0.5))\n","    \n","    model.add(Dense(units = nn_params['output_neurons'], activation = nn_params['output_activation']))\n","    model.compile(loss=nn_params['loss'],\n","                  optimizer=keras.optimizers.SGD(learning_rate=1e-4, momentum=0.95),\n","                  metrics=['accuracy'])\n","    return model\n","\n","  def CNNClassifier(num_hidden_layers, nn_params):\n","    model = Sequential()\n","\n","    model.add(Conv2D(32, (3, 3), input_shape=nn_params['input_shape'], padding = 'same', kernel_regularizer=l2(0.01), bias_regularizer=l2(0.01)))\n","    model.add(Activation('relu'))\n","    model.add(MaxPooling2D(pool_size=(2, 2)))\n","\n","    for i in range(num_hidden_layers-1):\n","        model.add(Conv2D(64, (3, 3), padding = 'same', kernel_regularizer=l2(0.01), bias_regularizer=l2(0.01)))\n","        model.add(Activation('relu'))\n","        model.add(MaxPooling2D(pool_size=(2, 2)))\n","\n","    model.add(Flatten()) \n","\n","    model.add(Dense(units = 128, activation = 'relu'))\n","    model.add(Dropout(0.5))\n","    model.add(Dense(units = 64, activation = 'relu', kernel_regularizer=l2(0.01), bias_regularizer=l2(0.01)))\n","    model.add(Dropout(0.5))\n","\n","    model.add(Dense(units = nn_params['output_neurons'], activation = nn_params['output_activation']))\n","\n","    # initiate RMSprop optimizer\n","    opt = keras.optimizers.legacy.RMSprop(learning_rate=1e-5, decay=1e-6)\n","\n","    # Let's train the model using RMSprop\n","    model.compile(loss=nn_params['loss'],\n","                  optimizer=opt,\n","                  metrics=['accuracy'])    \n","    return model\n","\n","  def TransferClassifier(name, nn_params, trainable = True):\n","    expert_dict = {'VGG16': VGG16, \n","                   'VGG19': VGG19,\n","                   'ResNet50':ResNet50,\n","                   'DenseNet121':DenseNet121}\n","\n","    expert_conv = expert_dict[name](weights = 'imagenet', \n","                                              include_top = False, \n","                                              input_shape = nn_params['input_shape'])\n","    for layer in expert_conv.layers:\n","      layer.trainable = trainable\n","      \n","    expert_model = Sequential()\n","    expert_model.add(expert_conv)\n","    expert_model.add(GlobalAveragePooling2D())\n","\n","    expert_model.add(Dense(128, activation = 'relu'))\n","    expert_model.add(Dropout(0.5))\n","\n","    expert_model.add(Dense(64, activation = 'relu'))\n","    expert_model.add(Dropout(0.5))\n","\n","    expert_model.add(Dense(nn_params['output_neurons'], activation = nn_params['output_activation']))\n","\n","    expert_model.compile(loss = nn_params['loss'], \n","                  optimizer = keras.optimizers.SGD(learning_rate=1e-4, momentum=0.9), \n","                  metrics=['accuracy'])\n","\n","    return expert_model\n","\n","### defining project variables\n","# file variables\n","metadata_url         = \"https://storage.googleapis.com/inspirit-ai-data-bucket-1/Data/AI%20Scholars/Sessions%206%20-%2010%20(Projects)/Project%20-%20(Healthcare%20A)%20Pneumonia/metadata.csv\"\n","image_data_url       = 'https://storage.googleapis.com/inspirit-ai-data-bucket-1/Data/AI%20Scholars/Sessions%206%20-%2010%20(Projects)/Project%20-%20(Healthcare%20A)%20Pneumonia/image_data.npy'\n","image_data_path      = './image_data.npy'\n","metadata_path        = './metadata.csv'\n","image_shape          = (64, 64, 3)\n","\n","# neural net parameters\n","nn_params = {}\n","nn_params['input_shape']       = image_shape\n","nn_params['output_neurons']    = 1\n","nn_params['loss']              = 'binary_crossentropy'\n","nn_params['output_activation'] = 'sigmoid'\n","\n","###\n","!wget -q --show-progress \"https://storage.googleapis.com/inspirit-ai-data-bucket-1/Data/AI%20Scholars/Sessions%206%20-%2010%20(Projects)/Project%20-%20(Healthcare%20A)%20Pneumonia/metadata.csv\"\n","!wget -q --show-progress \"https://storage.googleapis.com/inspirit-ai-data-bucket-1/Data/AI%20Scholars/Sessions%206%20-%2010%20(Projects)/Project%20-%20(Healthcare%20A)%20Pneumonia/image_data.npy\"\n","\n","\n","### pre-loading all data of interest\n","_all_data = np.load('image_data.npy')\n","_metadata = pkg.get_metadata(metadata_path, ['train','test','field'])\n","\n","### preparing definitions\n","# downloading and loading data\n","get_data_split = pkg.get_data_split\n","get_metadata    = lambda :                 pkg.get_metadata(metadata_path, ['train','test'])\n","get_train_data  = lambda flatten = False : pkg.get_train_data(flatten = flatten, all_data = _all_data, metadata = _metadata, image_shape = image_shape)\n","get_test_data   = lambda flatten = False : pkg.get_test_data(flatten = flatten, all_data = _all_data, metadata = _metadata, image_shape = image_shape)\n","get_field_data  = lambda flatten = False : pkg.get_field_data(flatten = flatten, all_data = _all_data, metadata = _metadata, image_shape = image_shape)\n","\n","# plotting\n","plot_one_image = lambda data, labels = [], index = None: helpers.plot_one_image(data = data, labels = labels, index = index, image_shape = image_shape);\n","plot_acc       = lambda history: helpers.plot_acc(history)\n","\n","# querying and combining data\n","combine_data           = helpers.combine_data;\n","\n","# models with input parameters\n","DenseClassifier     = lambda hidden_layer_sizes: models.DenseClassifier(hidden_layer_sizes = hidden_layer_sizes, nn_params = nn_params);\n","CNNClassifier       = lambda num_hidden_layers: models.CNNClassifier(num_hidden_layers, nn_params = nn_params);\n","TransferClassifier  = lambda name: models.TransferClassifier(name = name, nn_params = nn_params);\n","\n","monitor = ModelCheckpoint('./model.h5', monitor='val_accuracy', verbose=0, save_best_only=True, save_weights_only=False, mode='auto', save_freq='epoch')"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["metadata.csv        100%[===================>]  39.56K  --.-KB/s    in 0.001s  \n","image_data.npy      100%[===================>] 131.25M  38.2MB/s    in 3.9s    \n"]}]},{"cell_type":"markdown","metadata":{"id":"wuUfPXfZNf7w"},"source":["# Milestone 1: Putting our model into practice"]},{"cell_type":"markdown","metadata":{"id":"kK4kEOlrNkLh"},"source":["## Activity 1a: Testing on Field Data\n","#### While your models may have done well on your original training and validation data, deploying the model on \"field\" data can present different challenges. Field data is data that is different from the one where you built your model. For e.g. images obtained from a different x-ray machine."]},{"cell_type":"markdown","metadata":{"id":"JXbX8EwYNn5i"},"source":["### Exercise (Coding)"]},{"cell_type":"markdown","metadata":{"id":"9OcX3HejNrjJ"},"source":["Yesterday we worked with CNNs, which we saw perform much better than multi-layer perceptrons on imaging data. \n","\n","Below, please **re-train a 2-layer CNN and plot its accuracy over time!** (You can use all the functions from yesterday's code.) You can choose the number of epochs based on the graph."]},{"cell_type":"code","metadata":{"id":"lLos8L1KnCe3","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1678637231704,"user_tz":420,"elapsed":69082,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"00acfe02-aac8-45a5-fda6-a1ccf027512d"},"source":["train_data, train_labels = get_train_data()\n","test_data, test_labels   = get_test_data()\n","\n","### YOUR CODE HERE\n","cnn = CNNClassifier(num_hidden_layers = 2)\n","cnn_history = cnn.fit(train_data, train_labels, epochs = 100, validation_data = (test_data, test_labels), shuffle = True, callbacks = [monitor])\n","plot_acc(cnn_history)\n","\n","### END CODE"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","63/63 [==============================] - 10s 15ms/step - loss: 2.0091 - accuracy: 0.5355 - val_loss: 1.9846 - val_accuracy: 0.7700\n","Epoch 2/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9763 - accuracy: 0.6180 - val_loss: 1.9550 - val_accuracy: 0.7900\n","Epoch 3/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9352 - accuracy: 0.6715 - val_loss: 1.9279 - val_accuracy: 0.7000\n","Epoch 4/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9049 - accuracy: 0.7085 - val_loss: 1.8969 - val_accuracy: 0.7125\n","Epoch 5/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.8719 - accuracy: 0.7385 - val_loss: 1.8578 - val_accuracy: 0.7825\n","Epoch 6/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8381 - accuracy: 0.7580 - val_loss: 1.8339 - val_accuracy: 0.7400\n","Epoch 7/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8018 - accuracy: 0.7850 - val_loss: 1.7935 - val_accuracy: 0.7975\n","Epoch 8/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7693 - accuracy: 0.8020 - val_loss: 1.7593 - val_accuracy: 0.8125\n","Epoch 9/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7468 - accuracy: 0.8005 - val_loss: 1.7412 - val_accuracy: 0.8000\n","Epoch 10/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7126 - accuracy: 0.8220 - val_loss: 1.7007 - val_accuracy: 0.8275\n","Epoch 11/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6817 - accuracy: 0.8425 - val_loss: 1.6764 - val_accuracy: 0.8275\n","Epoch 12/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6541 - accuracy: 0.8340 - val_loss: 1.6628 - val_accuracy: 0.8225\n","Epoch 13/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.6269 - accuracy: 0.8525 - val_loss: 1.6390 - val_accuracy: 0.8250\n","Epoch 14/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.5995 - accuracy: 0.8505 - val_loss: 1.6067 - val_accuracy: 0.8375\n","Epoch 15/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.5693 - accuracy: 0.8660 - val_loss: 1.6093 - val_accuracy: 0.7975\n","Epoch 16/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.5527 - accuracy: 0.8560 - val_loss: 1.5766 - val_accuracy: 0.8300\n","Epoch 17/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.5240 - accuracy: 0.8755 - val_loss: 1.5508 - val_accuracy: 0.8400\n","Epoch 18/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4998 - accuracy: 0.8725 - val_loss: 1.5425 - val_accuracy: 0.8275\n","Epoch 19/100\n","63/63 [==============================] - 1s 13ms/step - loss: 1.4909 - accuracy: 0.8795 - val_loss: 1.5155 - val_accuracy: 0.8550\n","Epoch 20/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4639 - accuracy: 0.8835 - val_loss: 1.5037 - val_accuracy: 0.8575\n","Epoch 21/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4573 - accuracy: 0.8810 - val_loss: 1.4949 - val_accuracy: 0.8425\n","Epoch 22/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4256 - accuracy: 0.8945 - val_loss: 1.4507 - val_accuracy: 0.8725\n","Epoch 23/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4180 - accuracy: 0.8940 - val_loss: 1.4771 - val_accuracy: 0.8325\n","Epoch 24/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3986 - accuracy: 0.8970 - val_loss: 1.4340 - val_accuracy: 0.8750\n","Epoch 25/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3766 - accuracy: 0.8995 - val_loss: 1.4336 - val_accuracy: 0.8675\n","Epoch 26/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3644 - accuracy: 0.9045 - val_loss: 1.4048 - val_accuracy: 0.8750\n","Epoch 27/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3553 - accuracy: 0.9015 - val_loss: 1.3909 - val_accuracy: 0.8750\n","Epoch 28/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.3452 - accuracy: 0.9025 - val_loss: 1.3812 - val_accuracy: 0.8725\n","Epoch 29/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3264 - accuracy: 0.9075 - val_loss: 1.3833 - val_accuracy: 0.8750\n","Epoch 30/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.3096 - accuracy: 0.9085 - val_loss: 1.4007 - val_accuracy: 0.8450\n","Epoch 31/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2937 - accuracy: 0.9100 - val_loss: 1.3736 - val_accuracy: 0.8675\n","Epoch 32/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2750 - accuracy: 0.9165 - val_loss: 1.3851 - val_accuracy: 0.8450\n","Epoch 33/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2679 - accuracy: 0.9150 - val_loss: 1.3462 - val_accuracy: 0.8775\n","Epoch 34/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2617 - accuracy: 0.9160 - val_loss: 1.3584 - val_accuracy: 0.8475\n","Epoch 35/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2394 - accuracy: 0.9255 - val_loss: 1.3406 - val_accuracy: 0.8550\n","Epoch 36/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2309 - accuracy: 0.9200 - val_loss: 1.2905 - val_accuracy: 0.8800\n","Epoch 37/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2237 - accuracy: 0.9205 - val_loss: 1.3046 - val_accuracy: 0.8775\n","Epoch 38/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2071 - accuracy: 0.9220 - val_loss: 1.3487 - val_accuracy: 0.8375\n","Epoch 39/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2014 - accuracy: 0.9200 - val_loss: 1.2997 - val_accuracy: 0.8675\n","Epoch 40/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.1803 - accuracy: 0.9225 - val_loss: 1.3625 - val_accuracy: 0.8200\n","Epoch 41/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1849 - accuracy: 0.9250 - val_loss: 1.3174 - val_accuracy: 0.8425\n","Epoch 42/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1686 - accuracy: 0.9265 - val_loss: 1.2584 - val_accuracy: 0.8750\n","Epoch 43/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1495 - accuracy: 0.9295 - val_loss: 1.2740 - val_accuracy: 0.8525\n","Epoch 44/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1324 - accuracy: 0.9365 - val_loss: 1.2810 - val_accuracy: 0.8525\n","Epoch 45/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1241 - accuracy: 0.9360 - val_loss: 1.3153 - val_accuracy: 0.8225\n","Epoch 46/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1268 - accuracy: 0.9330 - val_loss: 1.2454 - val_accuracy: 0.8575\n","Epoch 47/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1104 - accuracy: 0.9350 - val_loss: 1.2750 - val_accuracy: 0.8400\n","Epoch 48/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1106 - accuracy: 0.9325 - val_loss: 1.2645 - val_accuracy: 0.8400\n","Epoch 49/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1011 - accuracy: 0.9330 - val_loss: 1.3578 - val_accuracy: 0.7975\n","Epoch 50/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0793 - accuracy: 0.9370 - val_loss: 1.3112 - val_accuracy: 0.8150\n","Epoch 51/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0697 - accuracy: 0.9380 - val_loss: 1.1737 - val_accuracy: 0.8750\n","Epoch 52/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0550 - accuracy: 0.9460 - val_loss: 1.2623 - val_accuracy: 0.8275\n","Epoch 53/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0462 - accuracy: 0.9410 - val_loss: 1.3246 - val_accuracy: 0.8025\n","Epoch 54/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0520 - accuracy: 0.9390 - val_loss: 1.3054 - val_accuracy: 0.8100\n","Epoch 55/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0322 - accuracy: 0.9465 - val_loss: 1.1609 - val_accuracy: 0.8650\n","Epoch 56/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0346 - accuracy: 0.9410 - val_loss: 1.2602 - val_accuracy: 0.8225\n","Epoch 57/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0246 - accuracy: 0.9410 - val_loss: 1.3762 - val_accuracy: 0.7775\n","Epoch 58/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0067 - accuracy: 0.9500 - val_loss: 1.2380 - val_accuracy: 0.8200\n","Epoch 59/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0020 - accuracy: 0.9440 - val_loss: 1.2376 - val_accuracy: 0.8200\n","Epoch 60/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0025 - accuracy: 0.9380 - val_loss: 1.1800 - val_accuracy: 0.8400\n","Epoch 61/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9891 - accuracy: 0.9520 - val_loss: 1.1546 - val_accuracy: 0.8375\n","Epoch 62/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9750 - accuracy: 0.9450 - val_loss: 1.2286 - val_accuracy: 0.8175\n","Epoch 63/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9802 - accuracy: 0.9445 - val_loss: 1.2162 - val_accuracy: 0.8150\n","Epoch 64/100\n","63/63 [==============================] - 1s 12ms/step - loss: 0.9586 - accuracy: 0.9500 - val_loss: 1.2633 - val_accuracy: 0.8100\n","Epoch 65/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9492 - accuracy: 0.9505 - val_loss: 1.2764 - val_accuracy: 0.8025\n","Epoch 66/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.9404 - accuracy: 0.9505 - val_loss: 1.1794 - val_accuracy: 0.8200\n","Epoch 67/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9436 - accuracy: 0.9500 - val_loss: 1.1081 - val_accuracy: 0.8475\n","Epoch 68/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9339 - accuracy: 0.9515 - val_loss: 1.2670 - val_accuracy: 0.8025\n","Epoch 69/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9303 - accuracy: 0.9540 - val_loss: 1.1671 - val_accuracy: 0.8150\n","Epoch 70/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9224 - accuracy: 0.9510 - val_loss: 1.2284 - val_accuracy: 0.8025\n","Epoch 71/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.9118 - accuracy: 0.9535 - val_loss: 1.1625 - val_accuracy: 0.8175\n","Epoch 72/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9072 - accuracy: 0.9565 - val_loss: 1.2510 - val_accuracy: 0.8025\n","Epoch 73/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8949 - accuracy: 0.9595 - val_loss: 1.2229 - val_accuracy: 0.8000\n","Epoch 74/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.8906 - accuracy: 0.9540 - val_loss: 1.3972 - val_accuracy: 0.7425\n","Epoch 75/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8896 - accuracy: 0.9500 - val_loss: 1.2100 - val_accuracy: 0.8025\n","Epoch 76/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8778 - accuracy: 0.9570 - val_loss: 1.4018 - val_accuracy: 0.7400\n","Epoch 77/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8762 - accuracy: 0.9500 - val_loss: 1.1462 - val_accuracy: 0.8150\n","Epoch 78/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8668 - accuracy: 0.9515 - val_loss: 1.1610 - val_accuracy: 0.8075\n","Epoch 79/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.8572 - accuracy: 0.9510 - val_loss: 1.0971 - val_accuracy: 0.8200\n","Epoch 80/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8529 - accuracy: 0.9550 - val_loss: 1.1836 - val_accuracy: 0.8000\n","Epoch 81/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8611 - accuracy: 0.9495 - val_loss: 1.1139 - val_accuracy: 0.8175\n","Epoch 82/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.8378 - accuracy: 0.9570 - val_loss: 1.3274 - val_accuracy: 0.7625\n","Epoch 83/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8346 - accuracy: 0.9560 - val_loss: 1.1426 - val_accuracy: 0.8100\n","Epoch 84/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8387 - accuracy: 0.9520 - val_loss: 1.2027 - val_accuracy: 0.7925\n","Epoch 85/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8261 - accuracy: 0.9530 - val_loss: 1.2685 - val_accuracy: 0.7800\n","Epoch 86/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8151 - accuracy: 0.9560 - val_loss: 1.2403 - val_accuracy: 0.7825\n","Epoch 87/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8049 - accuracy: 0.9605 - val_loss: 1.2465 - val_accuracy: 0.7825\n","Epoch 88/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.8069 - accuracy: 0.9580 - val_loss: 1.1703 - val_accuracy: 0.8000\n","Epoch 89/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7972 - accuracy: 0.9590 - val_loss: 1.4135 - val_accuracy: 0.7325\n","Epoch 90/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7912 - accuracy: 0.9580 - val_loss: 1.3378 - val_accuracy: 0.7500\n","Epoch 91/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7908 - accuracy: 0.9605 - val_loss: 1.2340 - val_accuracy: 0.7800\n","Epoch 92/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7858 - accuracy: 0.9595 - val_loss: 1.3340 - val_accuracy: 0.7475\n","Epoch 93/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.7697 - accuracy: 0.9645 - val_loss: 1.2747 - val_accuracy: 0.7675\n","Epoch 94/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7737 - accuracy: 0.9590 - val_loss: 1.2759 - val_accuracy: 0.7650\n","Epoch 95/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7692 - accuracy: 0.9605 - val_loss: 1.0441 - val_accuracy: 0.8200\n","Epoch 96/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.7560 - accuracy: 0.9610 - val_loss: 1.2607 - val_accuracy: 0.7625\n","Epoch 97/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7514 - accuracy: 0.9620 - val_loss: 1.1754 - val_accuracy: 0.7950\n","Epoch 98/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7528 - accuracy: 0.9650 - val_loss: 1.0877 - val_accuracy: 0.8075\n","Epoch 99/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7437 - accuracy: 0.9620 - val_loss: 1.2927 - val_accuracy: 0.7625\n","Epoch 100/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7494 - accuracy: 0.9595 - val_loss: 1.1186 - val_accuracy: 0.7950\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"3aoowqx5Np9n"},"source":["### Exercise (Coding)"]},{"cell_type":"markdown","metadata":{"id":"JpWnKw_IPIr1"},"source":["Our radiologist friends have provided us with some new data from the field. We can access this with `get_field_data()`. \n","\n","Please create **field_data** and **field_labels**."]},{"cell_type":"code","metadata":{"id":"NjyXgqtizcJy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678637313664,"user_tz":420,"elapsed":231,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"8a4426b3-97ec-4e01-c1be-ff51fe97b71f"},"source":["#YOUR CODE HERE\n","cnn.evaluate(test_data,test_labels)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["13/13 [==============================] - 0s 4ms/step - loss: 1.1186 - accuracy: 0.7950\n"]},{"output_type":"execute_result","data":{"text/plain":["[1.1185979843139648, 0.7950000166893005]"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","metadata":{"id":"1Zp69Qbd2TGU"},"source":["What accuracy do you get when you use your trained CNN on the field data? Please calculate it below (hint: `.predict(field_data) > 0.5`)"]},{"cell_type":"code","metadata":{"id":"6EhQ-c9L2SsD","executionInfo":{"status":"ok","timestamp":1678637373723,"user_tz":420,"elapsed":570,"user":{"displayName":"Adham","userId":"04961045654033668196"}}},"source":["#YOUR CODE HERE\n","field_data,field_labels = get_field_data()"],"execution_count":6,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JncI7hnrPQS5"},"source":["**Discuss:** How does your performance on field data compare to test and train data? \n","\n","You've probably noticed that you get different performance every time you train your model! Let's get a sense of the average: below, please **train your model 5 times, calculate the accuracy on the field data each time, and print the average accuracy.**"]},{"cell_type":"code","source":["import numpy as np\n","L = []\n","for n in range (5):\n","  cnn = CNNClassifier(num_hidden_layers = 2)\n","  cnn_history = cnn.fit(train_data, train_labels, epochs = 100, validation_data = (test_data, test_labels), shuffle = True, callbacks = [monitor])\n","  field_preds = cnn.predict(field_data) > 0.5\n","  L.append(accuracy_score(field_labels,field_preds))\n","print(np.mean(L))\n","  "],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CRv_7FHkmn1U","executionInfo":{"status":"ok","timestamp":1678638734289,"user_tz":420,"elapsed":370354,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"365844d9-0f91-4378-8ebd-f9e1b850476e"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","63/63 [==============================] - 2s 12ms/step - loss: 2.0068 - accuracy: 0.5420 - val_loss: 1.9916 - val_accuracy: 0.6875\n","Epoch 2/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9686 - accuracy: 0.6270 - val_loss: 1.9558 - val_accuracy: 0.7750\n","Epoch 3/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9386 - accuracy: 0.6685 - val_loss: 1.9227 - val_accuracy: 0.7925\n","Epoch 4/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9063 - accuracy: 0.6960 - val_loss: 1.8963 - val_accuracy: 0.7550\n","Epoch 5/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8638 - accuracy: 0.7525 - val_loss: 1.8617 - val_accuracy: 0.7900\n","Epoch 6/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8325 - accuracy: 0.7620 - val_loss: 1.8240 - val_accuracy: 0.8300\n","Epoch 7/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8006 - accuracy: 0.7980 - val_loss: 1.8032 - val_accuracy: 0.7625\n","Epoch 8/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.7632 - accuracy: 0.8040 - val_loss: 1.7612 - val_accuracy: 0.8450\n","Epoch 9/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.7397 - accuracy: 0.8130 - val_loss: 1.7478 - val_accuracy: 0.7725\n","Epoch 10/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7107 - accuracy: 0.8215 - val_loss: 1.6981 - val_accuracy: 0.8475\n","Epoch 11/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6822 - accuracy: 0.8230 - val_loss: 1.6765 - val_accuracy: 0.8475\n","Epoch 12/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.6522 - accuracy: 0.8390 - val_loss: 1.6519 - val_accuracy: 0.8375\n","Epoch 13/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.6160 - accuracy: 0.8410 - val_loss: 1.6321 - val_accuracy: 0.8225\n","Epoch 14/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5868 - accuracy: 0.8505 - val_loss: 1.5959 - val_accuracy: 0.8475\n","Epoch 15/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5640 - accuracy: 0.8620 - val_loss: 1.6016 - val_accuracy: 0.7850\n","Epoch 16/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5518 - accuracy: 0.8600 - val_loss: 1.5919 - val_accuracy: 0.7800\n","Epoch 17/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5229 - accuracy: 0.8710 - val_loss: 1.5330 - val_accuracy: 0.8525\n","Epoch 18/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4935 - accuracy: 0.8745 - val_loss: 1.5034 - val_accuracy: 0.8725\n","Epoch 19/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4688 - accuracy: 0.8800 - val_loss: 1.4770 - val_accuracy: 0.8850\n","Epoch 20/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4573 - accuracy: 0.8800 - val_loss: 1.4988 - val_accuracy: 0.8375\n","Epoch 21/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4387 - accuracy: 0.8845 - val_loss: 1.4699 - val_accuracy: 0.8525\n","Epoch 22/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4193 - accuracy: 0.8955 - val_loss: 1.4472 - val_accuracy: 0.8550\n","Epoch 23/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.4021 - accuracy: 0.8915 - val_loss: 1.4147 - val_accuracy: 0.8775\n","Epoch 24/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.3814 - accuracy: 0.8910 - val_loss: 1.4294 - val_accuracy: 0.8475\n","Epoch 25/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3607 - accuracy: 0.8965 - val_loss: 1.3869 - val_accuracy: 0.8775\n","Epoch 26/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3433 - accuracy: 0.9065 - val_loss: 1.3699 - val_accuracy: 0.8775\n","Epoch 27/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3275 - accuracy: 0.9035 - val_loss: 1.3639 - val_accuracy: 0.8750\n","Epoch 28/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3112 - accuracy: 0.9080 - val_loss: 1.3409 - val_accuracy: 0.8750\n","Epoch 29/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3020 - accuracy: 0.9090 - val_loss: 1.3654 - val_accuracy: 0.8525\n","Epoch 30/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2838 - accuracy: 0.9115 - val_loss: 1.3185 - val_accuracy: 0.8725\n","Epoch 31/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2677 - accuracy: 0.9085 - val_loss: 1.3851 - val_accuracy: 0.8200\n","Epoch 32/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2602 - accuracy: 0.9170 - val_loss: 1.4066 - val_accuracy: 0.7950\n","Epoch 33/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2374 - accuracy: 0.9160 - val_loss: 1.3618 - val_accuracy: 0.8275\n","Epoch 34/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2304 - accuracy: 0.9225 - val_loss: 1.3568 - val_accuracy: 0.8200\n","Epoch 35/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2058 - accuracy: 0.9235 - val_loss: 1.3517 - val_accuracy: 0.8200\n","Epoch 36/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.1974 - accuracy: 0.9270 - val_loss: 1.3450 - val_accuracy: 0.8225\n","Epoch 37/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1873 - accuracy: 0.9185 - val_loss: 1.2941 - val_accuracy: 0.8550\n","Epoch 38/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1722 - accuracy: 0.9260 - val_loss: 1.2878 - val_accuracy: 0.8475\n","Epoch 39/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1625 - accuracy: 0.9330 - val_loss: 1.3471 - val_accuracy: 0.7975\n","Epoch 40/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1486 - accuracy: 0.9235 - val_loss: 1.2313 - val_accuracy: 0.8600\n","Epoch 41/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1393 - accuracy: 0.9265 - val_loss: 1.2830 - val_accuracy: 0.8350\n","Epoch 42/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1290 - accuracy: 0.9275 - val_loss: 1.2312 - val_accuracy: 0.8525\n","Epoch 43/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1068 - accuracy: 0.9360 - val_loss: 1.2049 - val_accuracy: 0.8600\n","Epoch 44/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1061 - accuracy: 0.9285 - val_loss: 1.2852 - val_accuracy: 0.8175\n","Epoch 45/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0926 - accuracy: 0.9335 - val_loss: 1.2170 - val_accuracy: 0.8475\n","Epoch 46/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0911 - accuracy: 0.9360 - val_loss: 1.2680 - val_accuracy: 0.8175\n","Epoch 47/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0868 - accuracy: 0.9325 - val_loss: 1.2500 - val_accuracy: 0.8300\n","Epoch 48/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0591 - accuracy: 0.9395 - val_loss: 1.2949 - val_accuracy: 0.8025\n","Epoch 49/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0582 - accuracy: 0.9355 - val_loss: 1.2618 - val_accuracy: 0.8125\n","Epoch 50/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0401 - accuracy: 0.9370 - val_loss: 1.2845 - val_accuracy: 0.8000\n","Epoch 51/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0404 - accuracy: 0.9395 - val_loss: 1.2078 - val_accuracy: 0.8300\n","Epoch 52/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0299 - accuracy: 0.9400 - val_loss: 1.2776 - val_accuracy: 0.8000\n","Epoch 53/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0158 - accuracy: 0.9390 - val_loss: 1.1665 - val_accuracy: 0.8500\n","Epoch 54/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0181 - accuracy: 0.9335 - val_loss: 1.1236 - val_accuracy: 0.8625\n","Epoch 55/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.9967 - accuracy: 0.9440 - val_loss: 1.3200 - val_accuracy: 0.7750\n","Epoch 56/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9989 - accuracy: 0.9365 - val_loss: 1.3735 - val_accuracy: 0.7625\n","Epoch 57/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9849 - accuracy: 0.9405 - val_loss: 1.2082 - val_accuracy: 0.8125\n","Epoch 58/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9756 - accuracy: 0.9405 - val_loss: 1.1630 - val_accuracy: 0.8275\n","Epoch 59/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9705 - accuracy: 0.9435 - val_loss: 1.1639 - val_accuracy: 0.8225\n","Epoch 60/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9550 - accuracy: 0.9455 - val_loss: 1.1592 - val_accuracy: 0.8225\n","Epoch 61/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9466 - accuracy: 0.9480 - val_loss: 1.1328 - val_accuracy: 0.8375\n","Epoch 62/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9445 - accuracy: 0.9480 - val_loss: 1.2044 - val_accuracy: 0.8075\n","Epoch 63/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9304 - accuracy: 0.9450 - val_loss: 1.1626 - val_accuracy: 0.8150\n","Epoch 64/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9303 - accuracy: 0.9445 - val_loss: 1.1572 - val_accuracy: 0.8125\n","Epoch 65/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9162 - accuracy: 0.9515 - val_loss: 1.3725 - val_accuracy: 0.7450\n","Epoch 66/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9133 - accuracy: 0.9465 - val_loss: 1.2443 - val_accuracy: 0.7800\n","Epoch 67/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9066 - accuracy: 0.9445 - val_loss: 1.2790 - val_accuracy: 0.7700\n","Epoch 68/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8916 - accuracy: 0.9495 - val_loss: 1.2671 - val_accuracy: 0.7750\n","Epoch 69/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8819 - accuracy: 0.9525 - val_loss: 1.3181 - val_accuracy: 0.7625\n","Epoch 70/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8785 - accuracy: 0.9480 - val_loss: 1.1077 - val_accuracy: 0.8200\n","Epoch 71/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8704 - accuracy: 0.9530 - val_loss: 1.2008 - val_accuracy: 0.7950\n","Epoch 72/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8678 - accuracy: 0.9505 - val_loss: 1.1378 - val_accuracy: 0.8000\n","Epoch 73/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8548 - accuracy: 0.9500 - val_loss: 1.1862 - val_accuracy: 0.7925\n","Epoch 74/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8545 - accuracy: 0.9515 - val_loss: 1.2084 - val_accuracy: 0.7875\n","Epoch 75/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8463 - accuracy: 0.9495 - val_loss: 1.5396 - val_accuracy: 0.6750\n","Epoch 76/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8469 - accuracy: 0.9495 - val_loss: 1.1648 - val_accuracy: 0.7875\n","Epoch 77/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8395 - accuracy: 0.9530 - val_loss: 1.1017 - val_accuracy: 0.8050\n","Epoch 78/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8264 - accuracy: 0.9545 - val_loss: 1.3217 - val_accuracy: 0.7450\n","Epoch 79/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8182 - accuracy: 0.9545 - val_loss: 1.1898 - val_accuracy: 0.7875\n","Epoch 80/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8051 - accuracy: 0.9555 - val_loss: 1.1206 - val_accuracy: 0.7950\n","Epoch 81/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8162 - accuracy: 0.9490 - val_loss: 1.2439 - val_accuracy: 0.7650\n","Epoch 82/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8068 - accuracy: 0.9500 - val_loss: 1.1300 - val_accuracy: 0.7900\n","Epoch 83/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7970 - accuracy: 0.9560 - val_loss: 1.1212 - val_accuracy: 0.7875\n","Epoch 84/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7920 - accuracy: 0.9550 - val_loss: 1.1938 - val_accuracy: 0.7750\n","Epoch 85/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7780 - accuracy: 0.9575 - val_loss: 1.2265 - val_accuracy: 0.7700\n","Epoch 86/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7721 - accuracy: 0.9555 - val_loss: 1.1529 - val_accuracy: 0.7900\n","Epoch 87/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7693 - accuracy: 0.9585 - val_loss: 1.2450 - val_accuracy: 0.7575\n","Epoch 88/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7701 - accuracy: 0.9540 - val_loss: 1.2704 - val_accuracy: 0.7525\n","Epoch 89/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7618 - accuracy: 0.9565 - val_loss: 1.0651 - val_accuracy: 0.8025\n","Epoch 90/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7568 - accuracy: 0.9535 - val_loss: 1.2070 - val_accuracy: 0.7575\n","Epoch 91/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7496 - accuracy: 0.9580 - val_loss: 1.2229 - val_accuracy: 0.7575\n","Epoch 92/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7487 - accuracy: 0.9605 - val_loss: 1.1429 - val_accuracy: 0.7875\n","Epoch 93/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7406 - accuracy: 0.9555 - val_loss: 1.1070 - val_accuracy: 0.7825\n","Epoch 94/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7310 - accuracy: 0.9590 - val_loss: 1.2116 - val_accuracy: 0.7550\n","Epoch 95/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7284 - accuracy: 0.9565 - val_loss: 1.2745 - val_accuracy: 0.7475\n","Epoch 96/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7301 - accuracy: 0.9565 - val_loss: 1.2457 - val_accuracy: 0.7500\n","Epoch 97/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.7262 - accuracy: 0.9560 - val_loss: 1.0178 - val_accuracy: 0.8075\n","Epoch 98/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7139 - accuracy: 0.9600 - val_loss: 1.2145 - val_accuracy: 0.7525\n","Epoch 99/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7181 - accuracy: 0.9550 - val_loss: 1.1635 - val_accuracy: 0.7775\n","Epoch 100/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.7103 - accuracy: 0.9575 - val_loss: 1.0694 - val_accuracy: 0.7825\n","13/13 [==============================] - 0s 4ms/step\n","Epoch 1/100\n","63/63 [==============================] - 2s 14ms/step - loss: 2.0200 - accuracy: 0.5490 - val_loss: 2.0034 - val_accuracy: 0.7100\n","Epoch 2/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9926 - accuracy: 0.6155 - val_loss: 1.9760 - val_accuracy: 0.6075\n","Epoch 3/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9640 - accuracy: 0.6530 - val_loss: 1.9503 - val_accuracy: 0.7150\n","Epoch 4/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9339 - accuracy: 0.6915 - val_loss: 1.9214 - val_accuracy: 0.8075\n","Epoch 5/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9058 - accuracy: 0.7240 - val_loss: 1.8932 - val_accuracy: 0.8175\n","Epoch 6/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8735 - accuracy: 0.7410 - val_loss: 1.8707 - val_accuracy: 0.7925\n","Epoch 7/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8474 - accuracy: 0.7730 - val_loss: 1.8423 - val_accuracy: 0.8000\n","Epoch 8/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8166 - accuracy: 0.7800 - val_loss: 1.8181 - val_accuracy: 0.8000\n","Epoch 9/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7907 - accuracy: 0.7915 - val_loss: 1.7923 - val_accuracy: 0.8025\n","Epoch 10/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7500 - accuracy: 0.8055 - val_loss: 1.7611 - val_accuracy: 0.8100\n","Epoch 11/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7288 - accuracy: 0.8035 - val_loss: 1.7317 - val_accuracy: 0.8200\n","Epoch 12/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7003 - accuracy: 0.8135 - val_loss: 1.7076 - val_accuracy: 0.8275\n","Epoch 13/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6712 - accuracy: 0.8295 - val_loss: 1.6863 - val_accuracy: 0.8075\n","Epoch 14/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.6444 - accuracy: 0.8330 - val_loss: 1.6632 - val_accuracy: 0.8150\n","Epoch 15/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6214 - accuracy: 0.8395 - val_loss: 1.6464 - val_accuracy: 0.8050\n","Epoch 16/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5927 - accuracy: 0.8475 - val_loss: 1.6040 - val_accuracy: 0.8500\n","Epoch 17/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5681 - accuracy: 0.8540 - val_loss: 1.5810 - val_accuracy: 0.8525\n","Epoch 18/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5424 - accuracy: 0.8610 - val_loss: 1.5621 - val_accuracy: 0.8575\n","Epoch 19/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5243 - accuracy: 0.8665 - val_loss: 1.5558 - val_accuracy: 0.8275\n","Epoch 20/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.4966 - accuracy: 0.8690 - val_loss: 1.5267 - val_accuracy: 0.8525\n","Epoch 21/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4634 - accuracy: 0.8780 - val_loss: 1.4893 - val_accuracy: 0.8525\n","Epoch 22/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4582 - accuracy: 0.8700 - val_loss: 1.4906 - val_accuracy: 0.8500\n","Epoch 23/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4277 - accuracy: 0.8855 - val_loss: 1.4756 - val_accuracy: 0.8500\n","Epoch 24/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4119 - accuracy: 0.8875 - val_loss: 1.4484 - val_accuracy: 0.8675\n","Epoch 25/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3914 - accuracy: 0.8930 - val_loss: 1.4771 - val_accuracy: 0.8100\n","Epoch 26/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3813 - accuracy: 0.8890 - val_loss: 1.4246 - val_accuracy: 0.8625\n","Epoch 27/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3503 - accuracy: 0.8975 - val_loss: 1.4528 - val_accuracy: 0.8150\n","Epoch 28/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3361 - accuracy: 0.9000 - val_loss: 1.4294 - val_accuracy: 0.8250\n","Epoch 29/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3224 - accuracy: 0.9020 - val_loss: 1.3617 - val_accuracy: 0.8650\n","Epoch 30/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3108 - accuracy: 0.9035 - val_loss: 1.3991 - val_accuracy: 0.8350\n","Epoch 31/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2955 - accuracy: 0.9030 - val_loss: 1.3979 - val_accuracy: 0.8250\n","Epoch 32/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2692 - accuracy: 0.9165 - val_loss: 1.3337 - val_accuracy: 0.8700\n","Epoch 33/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2498 - accuracy: 0.9195 - val_loss: 1.3387 - val_accuracy: 0.8600\n","Epoch 34/100\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2446 - accuracy: 0.9125 - val_loss: 1.3733 - val_accuracy: 0.8225\n","Epoch 35/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2336 - accuracy: 0.9215 - val_loss: 1.4265 - val_accuracy: 0.7700\n","Epoch 36/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2129 - accuracy: 0.9240 - val_loss: 1.3188 - val_accuracy: 0.8500\n","Epoch 37/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2171 - accuracy: 0.9100 - val_loss: 1.3566 - val_accuracy: 0.8200\n","Epoch 38/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1864 - accuracy: 0.9260 - val_loss: 1.3519 - val_accuracy: 0.8125\n","Epoch 39/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1840 - accuracy: 0.9255 - val_loss: 1.3338 - val_accuracy: 0.8225\n","Epoch 40/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1704 - accuracy: 0.9275 - val_loss: 1.2725 - val_accuracy: 0.8625\n","Epoch 41/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1501 - accuracy: 0.9360 - val_loss: 1.3138 - val_accuracy: 0.8200\n","Epoch 42/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.1473 - accuracy: 0.9255 - val_loss: 1.3490 - val_accuracy: 0.7950\n","Epoch 43/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1356 - accuracy: 0.9325 - val_loss: 1.2821 - val_accuracy: 0.8275\n","Epoch 44/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1172 - accuracy: 0.9310 - val_loss: 1.2725 - val_accuracy: 0.8275\n","Epoch 45/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1044 - accuracy: 0.9360 - val_loss: 1.3301 - val_accuracy: 0.7975\n","Epoch 46/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1061 - accuracy: 0.9280 - val_loss: 1.3258 - val_accuracy: 0.7975\n","Epoch 47/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0843 - accuracy: 0.9360 - val_loss: 1.2765 - val_accuracy: 0.8200\n","Epoch 48/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0786 - accuracy: 0.9335 - val_loss: 1.3728 - val_accuracy: 0.7775\n","Epoch 49/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0728 - accuracy: 0.9350 - val_loss: 1.3497 - val_accuracy: 0.7850\n","Epoch 50/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0593 - accuracy: 0.9380 - val_loss: 1.3350 - val_accuracy: 0.7900\n","Epoch 51/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0487 - accuracy: 0.9445 - val_loss: 1.2095 - val_accuracy: 0.8325\n","Epoch 52/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0411 - accuracy: 0.9360 - val_loss: 1.2856 - val_accuracy: 0.8025\n","Epoch 53/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0339 - accuracy: 0.9410 - val_loss: 1.3153 - val_accuracy: 0.7900\n","Epoch 54/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0216 - accuracy: 0.9430 - val_loss: 1.2212 - val_accuracy: 0.8175\n","Epoch 55/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0060 - accuracy: 0.9450 - val_loss: 1.2506 - val_accuracy: 0.8050\n","Epoch 56/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0065 - accuracy: 0.9415 - val_loss: 1.2934 - val_accuracy: 0.8000\n","Epoch 57/100\n","63/63 [==============================] - 1s 15ms/step - loss: 0.9958 - accuracy: 0.9480 - val_loss: 1.2593 - val_accuracy: 0.8025\n","Epoch 58/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9894 - accuracy: 0.9415 - val_loss: 1.3046 - val_accuracy: 0.7825\n","Epoch 59/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9679 - accuracy: 0.9490 - val_loss: 1.1700 - val_accuracy: 0.8275\n","Epoch 60/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9687 - accuracy: 0.9460 - val_loss: 1.2664 - val_accuracy: 0.7950\n","Epoch 61/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9601 - accuracy: 0.9485 - val_loss: 1.2180 - val_accuracy: 0.8075\n","Epoch 62/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.9505 - accuracy: 0.9525 - val_loss: 1.2044 - val_accuracy: 0.8075\n","Epoch 63/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9364 - accuracy: 0.9525 - val_loss: 1.2399 - val_accuracy: 0.8050\n","Epoch 64/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9176 - accuracy: 0.9530 - val_loss: 1.1930 - val_accuracy: 0.8025\n","Epoch 65/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9246 - accuracy: 0.9440 - val_loss: 1.3696 - val_accuracy: 0.7500\n","Epoch 66/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9180 - accuracy: 0.9500 - val_loss: 1.2358 - val_accuracy: 0.7975\n","Epoch 67/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9106 - accuracy: 0.9460 - val_loss: 1.2779 - val_accuracy: 0.7825\n","Epoch 68/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9021 - accuracy: 0.9525 - val_loss: 1.1980 - val_accuracy: 0.8000\n","Epoch 69/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9022 - accuracy: 0.9495 - val_loss: 1.2157 - val_accuracy: 0.7975\n","Epoch 70/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8929 - accuracy: 0.9490 - val_loss: 1.3063 - val_accuracy: 0.7625\n","Epoch 71/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8752 - accuracy: 0.9520 - val_loss: 1.1995 - val_accuracy: 0.7975\n","Epoch 72/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8724 - accuracy: 0.9525 - val_loss: 1.2828 - val_accuracy: 0.7700\n","Epoch 73/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8655 - accuracy: 0.9530 - val_loss: 1.1982 - val_accuracy: 0.7925\n","Epoch 74/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8684 - accuracy: 0.9510 - val_loss: 1.1693 - val_accuracy: 0.7950\n","Epoch 75/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8525 - accuracy: 0.9515 - val_loss: 1.3239 - val_accuracy: 0.7550\n","Epoch 76/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8514 - accuracy: 0.9550 - val_loss: 1.1886 - val_accuracy: 0.7900\n","Epoch 77/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8368 - accuracy: 0.9595 - val_loss: 1.2466 - val_accuracy: 0.7775\n","Epoch 78/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8330 - accuracy: 0.9545 - val_loss: 1.2232 - val_accuracy: 0.7825\n","Epoch 79/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8236 - accuracy: 0.9550 - val_loss: 1.2773 - val_accuracy: 0.7625\n","Epoch 80/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8242 - accuracy: 0.9500 - val_loss: 1.1798 - val_accuracy: 0.7875\n","Epoch 81/100\n","63/63 [==============================] - 0s 8ms/step - loss: 0.8131 - accuracy: 0.9585 - val_loss: 1.2487 - val_accuracy: 0.7775\n","Epoch 82/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8066 - accuracy: 0.9625 - val_loss: 1.2970 - val_accuracy: 0.7550\n","Epoch 83/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8063 - accuracy: 0.9560 - val_loss: 1.1733 - val_accuracy: 0.7850\n","Epoch 84/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8003 - accuracy: 0.9570 - val_loss: 1.3277 - val_accuracy: 0.7350\n","Epoch 85/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7932 - accuracy: 0.9605 - val_loss: 1.1171 - val_accuracy: 0.8025\n","Epoch 86/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7906 - accuracy: 0.9610 - val_loss: 1.1676 - val_accuracy: 0.7850\n","Epoch 87/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7800 - accuracy: 0.9590 - val_loss: 1.2865 - val_accuracy: 0.7500\n","Epoch 88/100\n","63/63 [==============================] - 1s 12ms/step - loss: 0.7674 - accuracy: 0.9650 - val_loss: 1.2086 - val_accuracy: 0.7775\n","Epoch 89/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7775 - accuracy: 0.9515 - val_loss: 1.3533 - val_accuracy: 0.7250\n","Epoch 90/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7604 - accuracy: 0.9610 - val_loss: 1.1735 - val_accuracy: 0.7800\n","Epoch 91/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7553 - accuracy: 0.9615 - val_loss: 1.4259 - val_accuracy: 0.6975\n","Epoch 92/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7579 - accuracy: 0.9555 - val_loss: 1.3300 - val_accuracy: 0.7325\n","Epoch 93/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7496 - accuracy: 0.9580 - val_loss: 1.1991 - val_accuracy: 0.7700\n","Epoch 94/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7399 - accuracy: 0.9600 - val_loss: 1.1137 - val_accuracy: 0.7900\n","Epoch 95/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7321 - accuracy: 0.9640 - val_loss: 1.2070 - val_accuracy: 0.7675\n","Epoch 96/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7318 - accuracy: 0.9625 - val_loss: 1.3504 - val_accuracy: 0.7175\n","Epoch 97/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7259 - accuracy: 0.9635 - val_loss: 1.1457 - val_accuracy: 0.7850\n","Epoch 98/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7254 - accuracy: 0.9585 - val_loss: 1.3489 - val_accuracy: 0.7175\n","Epoch 99/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7168 - accuracy: 0.9635 - val_loss: 1.3178 - val_accuracy: 0.7450\n","Epoch 100/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7138 - accuracy: 0.9610 - val_loss: 1.4208 - val_accuracy: 0.7000\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/100\n","63/63 [==============================] - 2s 17ms/step - loss: 2.0177 - accuracy: 0.5335 - val_loss: 1.9975 - val_accuracy: 0.7475\n","Epoch 2/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.9840 - accuracy: 0.5935 - val_loss: 1.9707 - val_accuracy: 0.6750\n","Epoch 3/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.9491 - accuracy: 0.6550 - val_loss: 1.9378 - val_accuracy: 0.7775\n","Epoch 4/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.9174 - accuracy: 0.6855 - val_loss: 1.9066 - val_accuracy: 0.7850\n","Epoch 5/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.8750 - accuracy: 0.7390 - val_loss: 1.8708 - val_accuracy: 0.8400\n","Epoch 6/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.8511 - accuracy: 0.7410 - val_loss: 1.8402 - val_accuracy: 0.8325\n","Epoch 7/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8165 - accuracy: 0.7755 - val_loss: 1.8127 - val_accuracy: 0.7975\n","Epoch 8/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7783 - accuracy: 0.7920 - val_loss: 1.7846 - val_accuracy: 0.7925\n","Epoch 9/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7458 - accuracy: 0.8055 - val_loss: 1.7523 - val_accuracy: 0.8000\n","Epoch 10/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7167 - accuracy: 0.8175 - val_loss: 1.7258 - val_accuracy: 0.8050\n","Epoch 11/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6935 - accuracy: 0.8155 - val_loss: 1.6901 - val_accuracy: 0.8525\n","Epoch 12/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6616 - accuracy: 0.8335 - val_loss: 1.6647 - val_accuracy: 0.8450\n","Epoch 13/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6317 - accuracy: 0.8425 - val_loss: 1.6533 - val_accuracy: 0.7900\n","Epoch 14/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6047 - accuracy: 0.8495 - val_loss: 1.6123 - val_accuracy: 0.8525\n","Epoch 15/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5845 - accuracy: 0.8495 - val_loss: 1.6076 - val_accuracy: 0.8075\n","Epoch 16/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5652 - accuracy: 0.8555 - val_loss: 1.6098 - val_accuracy: 0.7650\n","Epoch 17/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5301 - accuracy: 0.8605 - val_loss: 1.5516 - val_accuracy: 0.8550\n","Epoch 18/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5046 - accuracy: 0.8620 - val_loss: 1.5322 - val_accuracy: 0.8450\n","Epoch 19/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4886 - accuracy: 0.8725 - val_loss: 1.5070 - val_accuracy: 0.8575\n","Epoch 20/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4628 - accuracy: 0.8760 - val_loss: 1.4884 - val_accuracy: 0.8575\n","Epoch 21/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4421 - accuracy: 0.8750 - val_loss: 1.4827 - val_accuracy: 0.8450\n","Epoch 22/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.4262 - accuracy: 0.8795 - val_loss: 1.4455 - val_accuracy: 0.8650\n","Epoch 23/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4033 - accuracy: 0.8905 - val_loss: 1.4636 - val_accuracy: 0.8225\n","Epoch 24/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.3835 - accuracy: 0.8920 - val_loss: 1.4169 - val_accuracy: 0.8650\n","Epoch 25/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.3646 - accuracy: 0.8885 - val_loss: 1.4184 - val_accuracy: 0.8475\n","Epoch 26/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3491 - accuracy: 0.8990 - val_loss: 1.3938 - val_accuracy: 0.8675\n","Epoch 27/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3317 - accuracy: 0.9060 - val_loss: 1.3661 - val_accuracy: 0.8750\n","Epoch 28/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3057 - accuracy: 0.9075 - val_loss: 1.3732 - val_accuracy: 0.8600\n","Epoch 29/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2822 - accuracy: 0.9175 - val_loss: 1.3807 - val_accuracy: 0.8275\n","Epoch 30/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2795 - accuracy: 0.9070 - val_loss: 1.3628 - val_accuracy: 0.8325\n","Epoch 31/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2572 - accuracy: 0.9075 - val_loss: 1.3603 - val_accuracy: 0.8275\n","Epoch 32/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2547 - accuracy: 0.9090 - val_loss: 1.3426 - val_accuracy: 0.8325\n","Epoch 33/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2354 - accuracy: 0.9155 - val_loss: 1.3220 - val_accuracy: 0.8425\n","Epoch 34/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2264 - accuracy: 0.9110 - val_loss: 1.3699 - val_accuracy: 0.8025\n","Epoch 35/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2130 - accuracy: 0.9195 - val_loss: 1.3247 - val_accuracy: 0.8250\n","Epoch 36/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1939 - accuracy: 0.9135 - val_loss: 1.2689 - val_accuracy: 0.8675\n","Epoch 37/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1702 - accuracy: 0.9265 - val_loss: 1.2526 - val_accuracy: 0.8700\n","Epoch 38/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1601 - accuracy: 0.9220 - val_loss: 1.3048 - val_accuracy: 0.8150\n","Epoch 39/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1700 - accuracy: 0.9150 - val_loss: 1.3061 - val_accuracy: 0.8125\n","Epoch 40/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1380 - accuracy: 0.9310 - val_loss: 1.2228 - val_accuracy: 0.8625\n","Epoch 41/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1226 - accuracy: 0.9260 - val_loss: 1.3546 - val_accuracy: 0.7825\n","Epoch 42/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1152 - accuracy: 0.9275 - val_loss: 1.3219 - val_accuracy: 0.8000\n","Epoch 43/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0985 - accuracy: 0.9355 - val_loss: 1.2996 - val_accuracy: 0.8050\n","Epoch 44/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0919 - accuracy: 0.9310 - val_loss: 1.2641 - val_accuracy: 0.8150\n","Epoch 45/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0787 - accuracy: 0.9315 - val_loss: 1.1943 - val_accuracy: 0.8575\n","Epoch 46/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0657 - accuracy: 0.9265 - val_loss: 1.2089 - val_accuracy: 0.8450\n","Epoch 47/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0686 - accuracy: 0.9330 - val_loss: 1.1830 - val_accuracy: 0.8550\n","Epoch 48/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0415 - accuracy: 0.9405 - val_loss: 1.1958 - val_accuracy: 0.8400\n","Epoch 49/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0347 - accuracy: 0.9345 - val_loss: 1.2206 - val_accuracy: 0.8275\n","Epoch 50/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0295 - accuracy: 0.9315 - val_loss: 1.2328 - val_accuracy: 0.8175\n","Epoch 51/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0116 - accuracy: 0.9425 - val_loss: 1.2341 - val_accuracy: 0.8150\n","Epoch 52/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0019 - accuracy: 0.9400 - val_loss: 1.2882 - val_accuracy: 0.7825\n","Epoch 53/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9944 - accuracy: 0.9415 - val_loss: 1.2376 - val_accuracy: 0.8025\n","Epoch 54/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9886 - accuracy: 0.9365 - val_loss: 1.2332 - val_accuracy: 0.7975\n","Epoch 55/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9779 - accuracy: 0.9455 - val_loss: 1.1722 - val_accuracy: 0.8325\n","Epoch 56/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9776 - accuracy: 0.9415 - val_loss: 1.2118 - val_accuracy: 0.8050\n","Epoch 57/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9606 - accuracy: 0.9425 - val_loss: 1.1531 - val_accuracy: 0.8375\n","Epoch 58/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9525 - accuracy: 0.9415 - val_loss: 1.3094 - val_accuracy: 0.7675\n","Epoch 59/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9412 - accuracy: 0.9420 - val_loss: 1.1510 - val_accuracy: 0.8300\n","Epoch 60/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9357 - accuracy: 0.9435 - val_loss: 1.1378 - val_accuracy: 0.8325\n","Epoch 61/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9176 - accuracy: 0.9415 - val_loss: 1.1120 - val_accuracy: 0.8350\n","Epoch 62/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9214 - accuracy: 0.9440 - val_loss: 1.2299 - val_accuracy: 0.7850\n","Epoch 63/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9028 - accuracy: 0.9435 - val_loss: 1.0947 - val_accuracy: 0.8325\n","Epoch 64/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8948 - accuracy: 0.9490 - val_loss: 1.2222 - val_accuracy: 0.7825\n","Epoch 65/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8890 - accuracy: 0.9460 - val_loss: 1.3255 - val_accuracy: 0.7475\n","Epoch 66/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8916 - accuracy: 0.9490 - val_loss: 1.1823 - val_accuracy: 0.7900\n","Epoch 67/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8844 - accuracy: 0.9480 - val_loss: 1.1700 - val_accuracy: 0.7950\n","Epoch 68/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8653 - accuracy: 0.9545 - val_loss: 1.1406 - val_accuracy: 0.8050\n","Epoch 69/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8602 - accuracy: 0.9520 - val_loss: 1.1349 - val_accuracy: 0.8075\n","Epoch 70/100\n","63/63 [==============================] - 1s 12ms/step - loss: 0.8541 - accuracy: 0.9525 - val_loss: 1.3298 - val_accuracy: 0.7425\n","Epoch 71/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8498 - accuracy: 0.9505 - val_loss: 1.1473 - val_accuracy: 0.7925\n","Epoch 72/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8387 - accuracy: 0.9535 - val_loss: 1.1422 - val_accuracy: 0.7950\n","Epoch 73/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8325 - accuracy: 0.9545 - val_loss: 1.1555 - val_accuracy: 0.7925\n","Epoch 74/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8265 - accuracy: 0.9500 - val_loss: 1.1062 - val_accuracy: 0.8075\n","Epoch 75/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8169 - accuracy: 0.9540 - val_loss: 1.0949 - val_accuracy: 0.8100\n","Epoch 76/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8183 - accuracy: 0.9530 - val_loss: 1.2549 - val_accuracy: 0.7575\n","Epoch 77/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8045 - accuracy: 0.9500 - val_loss: 1.0632 - val_accuracy: 0.8125\n","Epoch 78/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7951 - accuracy: 0.9530 - val_loss: 1.1005 - val_accuracy: 0.7975\n","Epoch 79/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7876 - accuracy: 0.9580 - val_loss: 1.1814 - val_accuracy: 0.7725\n","Epoch 80/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7860 - accuracy: 0.9555 - val_loss: 1.4237 - val_accuracy: 0.7050\n","Epoch 81/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7815 - accuracy: 0.9535 - val_loss: 1.4169 - val_accuracy: 0.7050\n","Epoch 82/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7742 - accuracy: 0.9540 - val_loss: 1.1636 - val_accuracy: 0.7775\n","Epoch 83/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7692 - accuracy: 0.9590 - val_loss: 1.2404 - val_accuracy: 0.7550\n","Epoch 84/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7614 - accuracy: 0.9545 - val_loss: 1.1689 - val_accuracy: 0.7700\n","Epoch 85/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7536 - accuracy: 0.9620 - val_loss: 1.1819 - val_accuracy: 0.7650\n","Epoch 86/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7516 - accuracy: 0.9505 - val_loss: 1.1756 - val_accuracy: 0.7675\n","Epoch 87/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7420 - accuracy: 0.9575 - val_loss: 1.2277 - val_accuracy: 0.7550\n","Epoch 88/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7324 - accuracy: 0.9555 - val_loss: 1.1319 - val_accuracy: 0.7850\n","Epoch 89/100\n","63/63 [==============================] - 1s 12ms/step - loss: 0.7313 - accuracy: 0.9575 - val_loss: 1.2516 - val_accuracy: 0.7550\n","Epoch 90/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7307 - accuracy: 0.9565 - val_loss: 1.3302 - val_accuracy: 0.7250\n","Epoch 91/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7217 - accuracy: 0.9595 - val_loss: 1.0759 - val_accuracy: 0.7925\n","Epoch 92/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7207 - accuracy: 0.9605 - val_loss: 1.2722 - val_accuracy: 0.7425\n","Epoch 93/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7093 - accuracy: 0.9565 - val_loss: 1.1368 - val_accuracy: 0.7700\n","Epoch 94/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6977 - accuracy: 0.9600 - val_loss: 1.0450 - val_accuracy: 0.7900\n","Epoch 95/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6999 - accuracy: 0.9610 - val_loss: 1.1946 - val_accuracy: 0.7600\n","Epoch 96/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6886 - accuracy: 0.9560 - val_loss: 1.2595 - val_accuracy: 0.7475\n","Epoch 97/100\n","63/63 [==============================] - 1s 13ms/step - loss: 0.6956 - accuracy: 0.9555 - val_loss: 1.2078 - val_accuracy: 0.7575\n","Epoch 98/100\n","63/63 [==============================] - 1s 12ms/step - loss: 0.6825 - accuracy: 0.9590 - val_loss: 1.3010 - val_accuracy: 0.7275\n","Epoch 99/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6784 - accuracy: 0.9610 - val_loss: 1.2164 - val_accuracy: 0.7550\n","Epoch 100/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6745 - accuracy: 0.9635 - val_loss: 1.1216 - val_accuracy: 0.7775\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/100\n","63/63 [==============================] - 2s 13ms/step - loss: 2.0112 - accuracy: 0.5635 - val_loss: 1.9937 - val_accuracy: 0.6925\n","Epoch 2/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9783 - accuracy: 0.6450 - val_loss: 1.9637 - val_accuracy: 0.7925\n","Epoch 3/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9485 - accuracy: 0.6850 - val_loss: 1.9356 - val_accuracy: 0.7625\n","Epoch 4/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9102 - accuracy: 0.7335 - val_loss: 1.9049 - val_accuracy: 0.7800\n","Epoch 5/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8770 - accuracy: 0.7545 - val_loss: 1.8721 - val_accuracy: 0.7950\n","Epoch 6/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.8494 - accuracy: 0.7530 - val_loss: 1.8443 - val_accuracy: 0.7825\n","Epoch 7/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.8154 - accuracy: 0.7920 - val_loss: 1.8107 - val_accuracy: 0.8150\n","Epoch 8/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.7826 - accuracy: 0.8115 - val_loss: 1.7863 - val_accuracy: 0.7950\n","Epoch 9/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.7528 - accuracy: 0.8085 - val_loss: 1.7573 - val_accuracy: 0.7975\n","Epoch 10/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7179 - accuracy: 0.8320 - val_loss: 1.7355 - val_accuracy: 0.7925\n","Epoch 11/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6850 - accuracy: 0.8260 - val_loss: 1.7008 - val_accuracy: 0.8075\n","Epoch 12/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6602 - accuracy: 0.8375 - val_loss: 1.6738 - val_accuracy: 0.8175\n","Epoch 13/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6298 - accuracy: 0.8400 - val_loss: 1.6410 - val_accuracy: 0.8400\n","Epoch 14/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6016 - accuracy: 0.8445 - val_loss: 1.6249 - val_accuracy: 0.8225\n","Epoch 15/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5784 - accuracy: 0.8465 - val_loss: 1.6172 - val_accuracy: 0.7975\n","Epoch 16/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5522 - accuracy: 0.8650 - val_loss: 1.5999 - val_accuracy: 0.7925\n","Epoch 17/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5312 - accuracy: 0.8670 - val_loss: 1.5606 - val_accuracy: 0.8375\n","Epoch 18/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5048 - accuracy: 0.8750 - val_loss: 1.5782 - val_accuracy: 0.7825\n","Epoch 19/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4766 - accuracy: 0.8890 - val_loss: 1.5210 - val_accuracy: 0.8400\n","Epoch 20/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4601 - accuracy: 0.8760 - val_loss: 1.5154 - val_accuracy: 0.8300\n","Epoch 21/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4415 - accuracy: 0.8835 - val_loss: 1.4996 - val_accuracy: 0.8275\n","Epoch 22/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4240 - accuracy: 0.8875 - val_loss: 1.4729 - val_accuracy: 0.8425\n","Epoch 23/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3978 - accuracy: 0.8995 - val_loss: 1.5298 - val_accuracy: 0.7550\n","Epoch 24/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3815 - accuracy: 0.8965 - val_loss: 1.4732 - val_accuracy: 0.8150\n","Epoch 25/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3752 - accuracy: 0.8910 - val_loss: 1.4632 - val_accuracy: 0.8175\n","Epoch 26/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3571 - accuracy: 0.8985 - val_loss: 1.4373 - val_accuracy: 0.8300\n","Epoch 27/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3304 - accuracy: 0.9035 - val_loss: 1.4218 - val_accuracy: 0.8350\n","Epoch 28/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.3174 - accuracy: 0.8955 - val_loss: 1.4574 - val_accuracy: 0.7875\n","Epoch 29/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.3063 - accuracy: 0.9070 - val_loss: 1.3618 - val_accuracy: 0.8725\n","Epoch 30/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2878 - accuracy: 0.9075 - val_loss: 1.4063 - val_accuracy: 0.8150\n","Epoch 31/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2774 - accuracy: 0.9060 - val_loss: 1.3588 - val_accuracy: 0.8475\n","Epoch 32/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2608 - accuracy: 0.9105 - val_loss: 1.3790 - val_accuracy: 0.8325\n","Epoch 33/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2436 - accuracy: 0.9235 - val_loss: 1.3591 - val_accuracy: 0.8375\n","Epoch 34/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2323 - accuracy: 0.9235 - val_loss: 1.3655 - val_accuracy: 0.8300\n","Epoch 35/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2222 - accuracy: 0.9150 - val_loss: 1.3469 - val_accuracy: 0.8375\n","Epoch 36/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1985 - accuracy: 0.9245 - val_loss: 1.3226 - val_accuracy: 0.8400\n","Epoch 37/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1811 - accuracy: 0.9220 - val_loss: 1.3199 - val_accuracy: 0.8400\n","Epoch 38/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1751 - accuracy: 0.9270 - val_loss: 1.3440 - val_accuracy: 0.8175\n","Epoch 39/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1644 - accuracy: 0.9260 - val_loss: 1.3095 - val_accuracy: 0.8375\n","Epoch 40/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1511 - accuracy: 0.9300 - val_loss: 1.3598 - val_accuracy: 0.8050\n","Epoch 41/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1457 - accuracy: 0.9265 - val_loss: 1.2948 - val_accuracy: 0.8325\n","Epoch 42/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1301 - accuracy: 0.9275 - val_loss: 1.2903 - val_accuracy: 0.8275\n","Epoch 43/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1207 - accuracy: 0.9235 - val_loss: 1.2917 - val_accuracy: 0.8225\n","Epoch 44/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1026 - accuracy: 0.9355 - val_loss: 1.3098 - val_accuracy: 0.8225\n","Epoch 45/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0978 - accuracy: 0.9310 - val_loss: 1.3490 - val_accuracy: 0.7950\n","Epoch 46/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0772 - accuracy: 0.9345 - val_loss: 1.2810 - val_accuracy: 0.8225\n","Epoch 47/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0773 - accuracy: 0.9365 - val_loss: 1.2158 - val_accuracy: 0.8500\n","Epoch 48/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0675 - accuracy: 0.9355 - val_loss: 1.3638 - val_accuracy: 0.7675\n","Epoch 49/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0553 - accuracy: 0.9365 - val_loss: 1.3245 - val_accuracy: 0.7900\n","Epoch 50/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0457 - accuracy: 0.9420 - val_loss: 1.3420 - val_accuracy: 0.7800\n","Epoch 51/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0306 - accuracy: 0.9410 - val_loss: 1.2510 - val_accuracy: 0.8175\n","Epoch 52/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0233 - accuracy: 0.9395 - val_loss: 1.1910 - val_accuracy: 0.8400\n","Epoch 53/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0166 - accuracy: 0.9425 - val_loss: 1.2436 - val_accuracy: 0.8150\n","Epoch 54/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0046 - accuracy: 0.9380 - val_loss: 1.2216 - val_accuracy: 0.8175\n","Epoch 55/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9989 - accuracy: 0.9430 - val_loss: 1.2886 - val_accuracy: 0.7950\n","Epoch 56/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9863 - accuracy: 0.9475 - val_loss: 1.2188 - val_accuracy: 0.8150\n","Epoch 57/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9806 - accuracy: 0.9425 - val_loss: 1.2866 - val_accuracy: 0.7875\n","Epoch 58/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9553 - accuracy: 0.9515 - val_loss: 1.2398 - val_accuracy: 0.8100\n","Epoch 59/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9415 - accuracy: 0.9490 - val_loss: 1.3100 - val_accuracy: 0.7750\n","Epoch 60/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9608 - accuracy: 0.9460 - val_loss: 1.1970 - val_accuracy: 0.8200\n","Epoch 61/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9471 - accuracy: 0.9430 - val_loss: 1.2609 - val_accuracy: 0.7900\n","Epoch 62/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9267 - accuracy: 0.9540 - val_loss: 1.2287 - val_accuracy: 0.8050\n","Epoch 63/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9216 - accuracy: 0.9440 - val_loss: 1.2181 - val_accuracy: 0.8050\n","Epoch 64/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9248 - accuracy: 0.9480 - val_loss: 1.2896 - val_accuracy: 0.7725\n","Epoch 65/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9131 - accuracy: 0.9495 - val_loss: 1.3250 - val_accuracy: 0.7625\n","Epoch 66/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9020 - accuracy: 0.9510 - val_loss: 1.2470 - val_accuracy: 0.7850\n","Epoch 67/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8928 - accuracy: 0.9525 - val_loss: 1.3053 - val_accuracy: 0.7700\n","Epoch 68/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8868 - accuracy: 0.9515 - val_loss: 1.2039 - val_accuracy: 0.7925\n","Epoch 69/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8788 - accuracy: 0.9565 - val_loss: 1.1644 - val_accuracy: 0.8100\n","Epoch 70/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8643 - accuracy: 0.9590 - val_loss: 1.1543 - val_accuracy: 0.8075\n","Epoch 71/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8573 - accuracy: 0.9550 - val_loss: 1.2987 - val_accuracy: 0.7625\n","Epoch 72/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8608 - accuracy: 0.9545 - val_loss: 1.3302 - val_accuracy: 0.7475\n","Epoch 73/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8467 - accuracy: 0.9505 - val_loss: 1.1546 - val_accuracy: 0.8025\n","Epoch 74/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8387 - accuracy: 0.9535 - val_loss: 1.2476 - val_accuracy: 0.7750\n","Epoch 75/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8447 - accuracy: 0.9565 - val_loss: 1.1981 - val_accuracy: 0.7875\n","Epoch 76/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8227 - accuracy: 0.9585 - val_loss: 1.2392 - val_accuracy: 0.7700\n","Epoch 77/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8249 - accuracy: 0.9535 - val_loss: 1.1527 - val_accuracy: 0.7900\n","Epoch 78/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8249 - accuracy: 0.9545 - val_loss: 1.1988 - val_accuracy: 0.7800\n","Epoch 79/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8108 - accuracy: 0.9590 - val_loss: 1.2672 - val_accuracy: 0.7500\n","Epoch 80/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7989 - accuracy: 0.9645 - val_loss: 1.2755 - val_accuracy: 0.7500\n","Epoch 81/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7928 - accuracy: 0.9575 - val_loss: 1.2320 - val_accuracy: 0.7650\n","Epoch 82/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7881 - accuracy: 0.9575 - val_loss: 1.2515 - val_accuracy: 0.7625\n","Epoch 83/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7869 - accuracy: 0.9535 - val_loss: 1.2097 - val_accuracy: 0.7675\n","Epoch 84/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7773 - accuracy: 0.9575 - val_loss: 1.2726 - val_accuracy: 0.7500\n","Epoch 85/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7640 - accuracy: 0.9590 - val_loss: 1.0617 - val_accuracy: 0.8200\n","Epoch 86/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7607 - accuracy: 0.9585 - val_loss: 1.2156 - val_accuracy: 0.7650\n","Epoch 87/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7555 - accuracy: 0.9575 - val_loss: 1.1842 - val_accuracy: 0.7725\n","Epoch 88/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7533 - accuracy: 0.9575 - val_loss: 1.1502 - val_accuracy: 0.7750\n","Epoch 89/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7452 - accuracy: 0.9615 - val_loss: 1.2604 - val_accuracy: 0.7475\n","Epoch 90/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7380 - accuracy: 0.9660 - val_loss: 1.3927 - val_accuracy: 0.7200\n","Epoch 91/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7334 - accuracy: 0.9620 - val_loss: 1.1702 - val_accuracy: 0.7725\n","Epoch 92/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7334 - accuracy: 0.9615 - val_loss: 1.1593 - val_accuracy: 0.7750\n","Epoch 93/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7223 - accuracy: 0.9625 - val_loss: 1.1862 - val_accuracy: 0.7700\n","Epoch 94/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7215 - accuracy: 0.9635 - val_loss: 1.1784 - val_accuracy: 0.7675\n","Epoch 95/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7102 - accuracy: 0.9590 - val_loss: 1.1417 - val_accuracy: 0.7750\n","Epoch 96/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7084 - accuracy: 0.9635 - val_loss: 1.2503 - val_accuracy: 0.7450\n","Epoch 97/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7009 - accuracy: 0.9650 - val_loss: 1.1550 - val_accuracy: 0.7725\n","Epoch 98/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7007 - accuracy: 0.9630 - val_loss: 1.1225 - val_accuracy: 0.7725\n","Epoch 99/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6918 - accuracy: 0.9635 - val_loss: 1.2321 - val_accuracy: 0.7450\n","Epoch 100/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.6858 - accuracy: 0.9630 - val_loss: 1.2693 - val_accuracy: 0.7400\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/100\n","63/63 [==============================] - 2s 12ms/step - loss: 2.0176 - accuracy: 0.5165 - val_loss: 1.9976 - val_accuracy: 0.6850\n","Epoch 2/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9799 - accuracy: 0.5855 - val_loss: 1.9624 - val_accuracy: 0.7425\n","Epoch 3/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9484 - accuracy: 0.6455 - val_loss: 1.9332 - val_accuracy: 0.7325\n","Epoch 4/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9169 - accuracy: 0.6730 - val_loss: 1.9030 - val_accuracy: 0.7925\n","Epoch 5/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8902 - accuracy: 0.7005 - val_loss: 1.8715 - val_accuracy: 0.8100\n","Epoch 6/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8562 - accuracy: 0.7345 - val_loss: 1.8427 - val_accuracy: 0.8200\n","Epoch 7/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8246 - accuracy: 0.7610 - val_loss: 1.8114 - val_accuracy: 0.8350\n","Epoch 8/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7938 - accuracy: 0.7715 - val_loss: 1.7986 - val_accuracy: 0.7750\n","Epoch 9/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7599 - accuracy: 0.7840 - val_loss: 1.7548 - val_accuracy: 0.8275\n","Epoch 10/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7326 - accuracy: 0.7935 - val_loss: 1.7284 - val_accuracy: 0.8400\n","Epoch 11/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.7015 - accuracy: 0.8215 - val_loss: 1.6978 - val_accuracy: 0.8550\n","Epoch 12/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.6801 - accuracy: 0.8025 - val_loss: 1.6888 - val_accuracy: 0.8025\n","Epoch 13/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.6507 - accuracy: 0.8210 - val_loss: 1.6550 - val_accuracy: 0.8450\n","Epoch 14/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.6250 - accuracy: 0.8325 - val_loss: 1.6431 - val_accuracy: 0.8025\n","Epoch 15/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5913 - accuracy: 0.8460 - val_loss: 1.6091 - val_accuracy: 0.8200\n","Epoch 16/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5738 - accuracy: 0.8355 - val_loss: 1.5913 - val_accuracy: 0.8300\n","Epoch 17/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5552 - accuracy: 0.8495 - val_loss: 1.5509 - val_accuracy: 0.8675\n","Epoch 18/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5217 - accuracy: 0.8620 - val_loss: 1.5357 - val_accuracy: 0.8475\n","Epoch 19/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5020 - accuracy: 0.8630 - val_loss: 1.5219 - val_accuracy: 0.8375\n","Epoch 20/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4802 - accuracy: 0.8745 - val_loss: 1.5266 - val_accuracy: 0.8175\n","Epoch 21/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4606 - accuracy: 0.8725 - val_loss: 1.4710 - val_accuracy: 0.8625\n","Epoch 22/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4542 - accuracy: 0.8815 - val_loss: 1.4564 - val_accuracy: 0.8650\n","Epoch 23/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4216 - accuracy: 0.8820 - val_loss: 1.4364 - val_accuracy: 0.8750\n","Epoch 24/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4175 - accuracy: 0.8925 - val_loss: 1.4335 - val_accuracy: 0.8525\n","Epoch 25/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3874 - accuracy: 0.8950 - val_loss: 1.4723 - val_accuracy: 0.8000\n","Epoch 26/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3703 - accuracy: 0.8990 - val_loss: 1.4486 - val_accuracy: 0.8150\n","Epoch 27/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3495 - accuracy: 0.8950 - val_loss: 1.3881 - val_accuracy: 0.8550\n","Epoch 28/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3371 - accuracy: 0.8990 - val_loss: 1.3615 - val_accuracy: 0.8700\n","Epoch 29/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3258 - accuracy: 0.9025 - val_loss: 1.4158 - val_accuracy: 0.8175\n","Epoch 30/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3056 - accuracy: 0.9085 - val_loss: 1.4027 - val_accuracy: 0.8175\n","Epoch 31/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2957 - accuracy: 0.9040 - val_loss: 1.4005 - val_accuracy: 0.8075\n","Epoch 32/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2735 - accuracy: 0.9115 - val_loss: 1.3285 - val_accuracy: 0.8475\n","Epoch 33/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2654 - accuracy: 0.9110 - val_loss: 1.3458 - val_accuracy: 0.8525\n","Epoch 34/100\n","63/63 [==============================] - 1s 12ms/step - loss: 1.2556 - accuracy: 0.9085 - val_loss: 1.3279 - val_accuracy: 0.8500\n","Epoch 35/100\n","63/63 [==============================] - 1s 11ms/step - loss: 1.2299 - accuracy: 0.9210 - val_loss: 1.3363 - val_accuracy: 0.8375\n","Epoch 36/100\n","63/63 [==============================] - 1s 13ms/step - loss: 1.2307 - accuracy: 0.9070 - val_loss: 1.3258 - val_accuracy: 0.8425\n","Epoch 37/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2094 - accuracy: 0.9215 - val_loss: 1.2938 - val_accuracy: 0.8525\n","Epoch 38/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2049 - accuracy: 0.9170 - val_loss: 1.3040 - val_accuracy: 0.8425\n","Epoch 39/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1823 - accuracy: 0.9220 - val_loss: 1.2880 - val_accuracy: 0.8500\n","Epoch 40/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1759 - accuracy: 0.9225 - val_loss: 1.3607 - val_accuracy: 0.7950\n","Epoch 41/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1580 - accuracy: 0.9245 - val_loss: 1.2139 - val_accuracy: 0.8875\n","Epoch 42/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1499 - accuracy: 0.9295 - val_loss: 1.2830 - val_accuracy: 0.8275\n","Epoch 43/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1242 - accuracy: 0.9315 - val_loss: 1.2232 - val_accuracy: 0.8575\n","Epoch 44/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1261 - accuracy: 0.9355 - val_loss: 1.2613 - val_accuracy: 0.8350\n","Epoch 45/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1116 - accuracy: 0.9315 - val_loss: 1.2569 - val_accuracy: 0.8325\n","Epoch 46/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1000 - accuracy: 0.9330 - val_loss: 1.2029 - val_accuracy: 0.8625\n","Epoch 47/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0937 - accuracy: 0.9280 - val_loss: 1.2621 - val_accuracy: 0.8225\n","Epoch 48/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0916 - accuracy: 0.9320 - val_loss: 1.1763 - val_accuracy: 0.8725\n","Epoch 49/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0659 - accuracy: 0.9375 - val_loss: 1.2772 - val_accuracy: 0.7950\n","Epoch 50/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0601 - accuracy: 0.9430 - val_loss: 1.2548 - val_accuracy: 0.8150\n","Epoch 51/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0523 - accuracy: 0.9420 - val_loss: 1.2559 - val_accuracy: 0.8025\n","Epoch 52/100\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0350 - accuracy: 0.9495 - val_loss: 1.1408 - val_accuracy: 0.8825\n","Epoch 53/100\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0355 - accuracy: 0.9380 - val_loss: 1.2890 - val_accuracy: 0.7875\n","Epoch 54/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0343 - accuracy: 0.9385 - val_loss: 1.1987 - val_accuracy: 0.8275\n","Epoch 55/100\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0250 - accuracy: 0.9365 - val_loss: 1.1860 - val_accuracy: 0.8325\n","Epoch 56/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9990 - accuracy: 0.9430 - val_loss: 1.2301 - val_accuracy: 0.8075\n","Epoch 57/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.9965 - accuracy: 0.9425 - val_loss: 1.2078 - val_accuracy: 0.8150\n","Epoch 58/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.9887 - accuracy: 0.9395 - val_loss: 1.2926 - val_accuracy: 0.7825\n","Epoch 59/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9834 - accuracy: 0.9470 - val_loss: 1.2767 - val_accuracy: 0.7825\n","Epoch 60/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9774 - accuracy: 0.9470 - val_loss: 1.2914 - val_accuracy: 0.7800\n","Epoch 61/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9679 - accuracy: 0.9435 - val_loss: 1.1130 - val_accuracy: 0.8575\n","Epoch 62/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9665 - accuracy: 0.9475 - val_loss: 1.2887 - val_accuracy: 0.7750\n","Epoch 63/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9602 - accuracy: 0.9440 - val_loss: 1.2458 - val_accuracy: 0.7825\n","Epoch 64/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9444 - accuracy: 0.9495 - val_loss: 1.2283 - val_accuracy: 0.7850\n","Epoch 65/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9348 - accuracy: 0.9470 - val_loss: 1.3614 - val_accuracy: 0.7575\n","Epoch 66/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9295 - accuracy: 0.9495 - val_loss: 1.3984 - val_accuracy: 0.7375\n","Epoch 67/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.9232 - accuracy: 0.9480 - val_loss: 1.1870 - val_accuracy: 0.7975\n","Epoch 68/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9121 - accuracy: 0.9450 - val_loss: 1.1714 - val_accuracy: 0.7975\n","Epoch 69/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9108 - accuracy: 0.9460 - val_loss: 1.2169 - val_accuracy: 0.7875\n","Epoch 70/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.9004 - accuracy: 0.9515 - val_loss: 1.2163 - val_accuracy: 0.7875\n","Epoch 71/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8926 - accuracy: 0.9470 - val_loss: 1.1167 - val_accuracy: 0.8150\n","Epoch 72/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8806 - accuracy: 0.9500 - val_loss: 1.2736 - val_accuracy: 0.7750\n","Epoch 73/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8766 - accuracy: 0.9475 - val_loss: 1.1902 - val_accuracy: 0.7825\n","Epoch 74/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.8659 - accuracy: 0.9505 - val_loss: 1.3907 - val_accuracy: 0.7300\n","Epoch 75/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8694 - accuracy: 0.9510 - val_loss: 1.1729 - val_accuracy: 0.7900\n","Epoch 76/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8493 - accuracy: 0.9570 - val_loss: 1.0748 - val_accuracy: 0.8350\n","Epoch 77/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8515 - accuracy: 0.9565 - val_loss: 1.1716 - val_accuracy: 0.7875\n","Epoch 78/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8440 - accuracy: 0.9515 - val_loss: 1.2664 - val_accuracy: 0.7750\n","Epoch 79/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8477 - accuracy: 0.9550 - val_loss: 1.1709 - val_accuracy: 0.7800\n","Epoch 80/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.8251 - accuracy: 0.9545 - val_loss: 1.4175 - val_accuracy: 0.7025\n","Epoch 81/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8287 - accuracy: 0.9540 - val_loss: 1.2410 - val_accuracy: 0.7700\n","Epoch 82/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8180 - accuracy: 0.9545 - val_loss: 1.1874 - val_accuracy: 0.7775\n","Epoch 83/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8149 - accuracy: 0.9535 - val_loss: 1.1289 - val_accuracy: 0.7900\n","Epoch 84/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.8063 - accuracy: 0.9520 - val_loss: 1.2080 - val_accuracy: 0.7775\n","Epoch 85/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7965 - accuracy: 0.9600 - val_loss: 1.1998 - val_accuracy: 0.7775\n","Epoch 86/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.8023 - accuracy: 0.9560 - val_loss: 1.2633 - val_accuracy: 0.7600\n","Epoch 87/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7933 - accuracy: 0.9540 - val_loss: 1.3348 - val_accuracy: 0.7325\n","Epoch 88/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7843 - accuracy: 0.9535 - val_loss: 1.1847 - val_accuracy: 0.7775\n","Epoch 89/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7856 - accuracy: 0.9550 - val_loss: 1.2053 - val_accuracy: 0.7700\n","Epoch 90/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7726 - accuracy: 0.9585 - val_loss: 1.1163 - val_accuracy: 0.7775\n","Epoch 91/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7692 - accuracy: 0.9570 - val_loss: 1.1785 - val_accuracy: 0.7825\n","Epoch 92/100\n","63/63 [==============================] - 1s 8ms/step - loss: 0.7597 - accuracy: 0.9560 - val_loss: 1.2385 - val_accuracy: 0.7650\n","Epoch 93/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7629 - accuracy: 0.9575 - val_loss: 1.0414 - val_accuracy: 0.8100\n","Epoch 94/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7533 - accuracy: 0.9635 - val_loss: 1.0870 - val_accuracy: 0.7850\n","Epoch 95/100\n","63/63 [==============================] - 1s 9ms/step - loss: 0.7352 - accuracy: 0.9610 - val_loss: 1.1183 - val_accuracy: 0.7825\n","Epoch 96/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7418 - accuracy: 0.9525 - val_loss: 1.3098 - val_accuracy: 0.7325\n","Epoch 97/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7348 - accuracy: 0.9560 - val_loss: 1.1758 - val_accuracy: 0.7800\n","Epoch 98/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7287 - accuracy: 0.9570 - val_loss: 1.2364 - val_accuracy: 0.7675\n","Epoch 99/100\n","63/63 [==============================] - 1s 10ms/step - loss: 0.7245 - accuracy: 0.9570 - val_loss: 1.3577 - val_accuracy: 0.7150\n","Epoch 100/100\n","63/63 [==============================] - 1s 11ms/step - loss: 0.7172 - accuracy: 0.9620 - val_loss: 1.1675 - val_accuracy: 0.7750\n","13/13 [==============================] - 0s 4ms/step\n","0.7545000000000001\n"]}]},{"cell_type":"code","metadata":{"id":"R7S7rncnQFSP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678637453842,"user_tz":420,"elapsed":826,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"aaa284cb-d8c8-4415-91fe-94e05e3f4760"},"source":["### YOUR CODE HERE\n","cnn.predict(field_data)\n","\n","### END CODE"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["13/13 [==============================] - 0s 3ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0.9947037 ],\n","       [0.71663535],\n","       [0.95147794],\n","       [0.98380166],\n","       [0.19587284],\n","       [0.9829593 ],\n","       [0.41513556],\n","       [0.95563895],\n","       [0.75518304],\n","       [0.03872297],\n","       [0.21837908],\n","       [0.433607  ],\n","       [0.39136505],\n","       [0.69927704],\n","       [0.06071598],\n","       [0.07864644],\n","       [0.2743197 ],\n","       [0.886757  ],\n","       [0.9952715 ],\n","       [0.52000856],\n","       [0.90399975],\n","       [0.97723866],\n","       [0.04839751],\n","       [0.06458381],\n","       [0.09371848],\n","       [0.13936935],\n","       [0.0521471 ],\n","       [0.11131465],\n","       [0.9956512 ],\n","       [0.11191909],\n","       [0.97964853],\n","       [0.18245232],\n","       [0.98501116],\n","       [0.99007684],\n","       [0.10152604],\n","       [0.99492526],\n","       [0.9908853 ],\n","       [0.9870929 ],\n","       [0.96440345],\n","       [0.9978321 ],\n","       [0.04698146],\n","       [0.2374587 ],\n","       [0.6474222 ],\n","       [0.9824698 ],\n","       [0.531799  ],\n","       [0.9484096 ],\n","       [0.97121835],\n","       [0.98646975],\n","       [0.95661646],\n","       [0.17439012],\n","       [0.98259014],\n","       [0.8916114 ],\n","       [0.90479004],\n","       [0.9424771 ],\n","       [0.09589696],\n","       [0.8928083 ],\n","       [0.01456118],\n","       [0.93225247],\n","       [0.42631835],\n","       [0.9534039 ],\n","       [0.99695075],\n","       [0.96213084],\n","       [0.0508064 ],\n","       [0.4302062 ],\n","       [0.23283114],\n","       [0.37606627],\n","       [0.03627396],\n","       [0.99506205],\n","       [0.9370938 ],\n","       [0.4195586 ],\n","       [0.15282522],\n","       [0.9816729 ],\n","       [0.9850795 ],\n","       [0.71781605],\n","       [0.96866196],\n","       [0.42273986],\n","       [0.5872732 ],\n","       [0.06514321],\n","       [0.26723748],\n","       [0.26726863],\n","       [0.940212  ],\n","       [0.7689227 ],\n","       [0.15883812],\n","       [0.5915933 ],\n","       [0.9888325 ],\n","       [0.97093683],\n","       [0.35804796],\n","       [0.64948875],\n","       [0.75268483],\n","       [0.99082434],\n","       [0.9959247 ],\n","       [0.55139637],\n","       [0.3689239 ],\n","       [0.9864899 ],\n","       [0.9721923 ],\n","       [0.08367915],\n","       [0.46722707],\n","       [0.36306757],\n","       [0.05661769],\n","       [0.7391004 ],\n","       [0.68445647],\n","       [0.9694272 ],\n","       [0.6311287 ],\n","       [0.88611436],\n","       [0.02026433],\n","       [0.9872743 ],\n","       [0.6416506 ],\n","       [0.81363297],\n","       [0.51505554],\n","       [0.12666345],\n","       [0.9532853 ],\n","       [0.5765421 ],\n","       [0.1321784 ],\n","       [0.9519451 ],\n","       [0.7784684 ],\n","       [0.863393  ],\n","       [0.22969884],\n","       [0.97711116],\n","       [0.07212131],\n","       [0.61773086],\n","       [0.8721405 ],\n","       [0.36513492],\n","       [0.5315184 ],\n","       [0.90271753],\n","       [0.81213284],\n","       [0.94794834],\n","       [0.00771506],\n","       [0.19385564],\n","       [0.5047454 ],\n","       [0.91538507],\n","       [0.96075624],\n","       [0.14498153],\n","       [0.80538166],\n","       [0.90808356],\n","       [0.01794892],\n","       [0.448564  ],\n","       [0.20733118],\n","       [0.06560046],\n","       [0.5043749 ],\n","       [0.98054767],\n","       [0.9468057 ],\n","       [0.53858125],\n","       [0.04154547],\n","       [0.9853688 ],\n","       [0.98301536],\n","       [0.7029678 ],\n","       [0.5978392 ],\n","       [0.9059378 ],\n","       [0.58426833],\n","       [0.3169253 ],\n","       [0.90516454],\n","       [0.9217602 ],\n","       [0.8569847 ],\n","       [0.04851886],\n","       [0.0097164 ],\n","       [0.52955556],\n","       [0.5172148 ],\n","       [0.88639516],\n","       [0.95301676],\n","       [0.9286412 ],\n","       [0.16919729],\n","       [0.70253044],\n","       [0.75082797],\n","       [0.9909401 ],\n","       [0.91548234],\n","       [0.25385535],\n","       [0.90462387],\n","       [0.8440443 ],\n","       [0.194128  ],\n","       [0.87638956],\n","       [0.82217145],\n","       [0.22138458],\n","       [0.06813196],\n","       [0.93749976],\n","       [0.9502878 ],\n","       [0.02762238],\n","       [0.77713263],\n","       [0.8202228 ],\n","       [0.6152055 ],\n","       [0.26982802],\n","       [0.96016467],\n","       [0.9768519 ],\n","       [0.95123345],\n","       [0.60655206],\n","       [0.9857502 ],\n","       [0.971253  ],\n","       [0.02185749],\n","       [0.03428195],\n","       [0.43556884],\n","       [0.9854395 ],\n","       [0.05444746],\n","       [0.71677583],\n","       [0.04250264],\n","       [0.9494072 ],\n","       [0.38715357],\n","       [0.96029246],\n","       [0.9578497 ],\n","       [0.90899   ],\n","       [0.9547992 ],\n","       [0.0237694 ],\n","       [0.9626312 ],\n","       [0.02873861],\n","       [0.7694945 ],\n","       [0.05061482],\n","       [0.9975425 ],\n","       [0.8762495 ],\n","       [0.99448895],\n","       [0.09356994],\n","       [0.9394425 ],\n","       [0.50248814],\n","       [0.9534039 ],\n","       [0.96336216],\n","       [0.9678927 ],\n","       [0.18299083],\n","       [0.7242543 ],\n","       [0.87619853],\n","       [0.0646403 ],\n","       [0.98802596],\n","       [0.30847204],\n","       [0.09199185],\n","       [0.99063826],\n","       [0.5848715 ],\n","       [0.9099661 ],\n","       [0.8472014 ],\n","       [0.7968567 ],\n","       [0.9603518 ],\n","       [0.8426259 ],\n","       [0.17671527],\n","       [0.07241768],\n","       [0.04486624],\n","       [0.8799413 ],\n","       [0.9944115 ],\n","       [0.4445969 ],\n","       [0.9957325 ],\n","       [0.46180865],\n","       [0.49208325],\n","       [0.05454789],\n","       [0.9012843 ],\n","       [0.02116351],\n","       [0.179858  ],\n","       [0.995133  ],\n","       [0.77374846],\n","       [0.97737134],\n","       [0.9654856 ],\n","       [0.81532156],\n","       [0.95286155],\n","       [0.8709881 ],\n","       [0.9979899 ],\n","       [0.05499628],\n","       [0.96949625],\n","       [0.9772578 ],\n","       [0.9856529 ],\n","       [0.2717236 ],\n","       [0.7506289 ],\n","       [0.0722091 ],\n","       [0.99405473],\n","       [0.9213429 ],\n","       [0.1286306 ],\n","       [0.38654715],\n","       [0.5412527 ],\n","       [0.8857432 ],\n","       [0.10665003],\n","       [0.9882968 ],\n","       [0.2254144 ],\n","       [0.9862196 ],\n","       [0.05612672],\n","       [0.33030438],\n","       [0.06187167],\n","       [0.7770313 ],\n","       [0.23728211],\n","       [0.9890603 ],\n","       [0.991872  ],\n","       [0.9324203 ],\n","       [0.2233805 ],\n","       [0.36746883],\n","       [0.11584737],\n","       [0.9716662 ],\n","       [0.34880006],\n","       [0.11480678],\n","       [0.97729766],\n","       [0.8327114 ],\n","       [0.09528995],\n","       [0.96491   ],\n","       [0.9634942 ],\n","       [0.9125736 ],\n","       [0.6238543 ],\n","       [0.7824455 ],\n","       [0.86825424],\n","       [0.98177356],\n","       [0.83047515],\n","       [0.99555534],\n","       [0.9693494 ],\n","       [0.95726466],\n","       [0.98260593],\n","       [0.78104687],\n","       [0.3017022 ],\n","       [0.8047746 ],\n","       [0.16784844],\n","       [0.934478  ],\n","       [0.9208654 ],\n","       [0.9763665 ],\n","       [0.7544989 ],\n","       [0.50886834],\n","       [0.9690581 ],\n","       [0.6412056 ],\n","       [0.7820858 ],\n","       [0.2458399 ],\n","       [0.9989421 ],\n","       [0.9711766 ],\n","       [0.9456497 ],\n","       [0.94503576],\n","       [0.98997027],\n","       [0.796138  ],\n","       [0.986186  ],\n","       [0.10842453],\n","       [0.9240164 ],\n","       [0.9281964 ],\n","       [0.03778877],\n","       [0.86938626],\n","       [0.82091784],\n","       [0.9233127 ],\n","       [0.21751355],\n","       [0.1060214 ],\n","       [0.8775438 ],\n","       [0.98648083],\n","       [0.10832952],\n","       [0.20573798],\n","       [0.8690667 ],\n","       [0.9954491 ],\n","       [0.08141505],\n","       [0.87835515],\n","       [0.92056984],\n","       [0.17124398],\n","       [0.8836878 ],\n","       [0.9982376 ],\n","       [0.04125119],\n","       [0.5756215 ],\n","       [0.9817556 ],\n","       [0.99845123],\n","       [0.9872688 ],\n","       [0.9689716 ],\n","       [0.81222236],\n","       [0.98824805],\n","       [0.6157656 ],\n","       [0.95175415],\n","       [0.9616012 ],\n","       [0.98885566],\n","       [0.54089844],\n","       [0.99494755],\n","       [0.99051625],\n","       [0.566979  ],\n","       [0.9590508 ],\n","       [0.14441629],\n","       [0.8448503 ],\n","       [0.6155918 ],\n","       [0.975744  ],\n","       [0.9991721 ],\n","       [0.61680263],\n","       [0.98946136],\n","       [0.9496921 ],\n","       [0.98509514],\n","       [0.9822764 ],\n","       [0.99839324],\n","       [0.08309435],\n","       [0.92759216],\n","       [0.959831  ],\n","       [0.9776033 ],\n","       [0.08908625],\n","       [0.9302664 ],\n","       [0.9976223 ],\n","       [0.71970165],\n","       [0.88793606],\n","       [0.98426753],\n","       [0.79434186],\n","       [0.99784064],\n","       [0.05114507],\n","       [0.6981895 ],\n","       [0.02689284],\n","       [0.9261194 ],\n","       [0.9185685 ],\n","       [0.09135196],\n","       [0.5836873 ],\n","       [0.7270928 ],\n","       [0.9823874 ],\n","       [0.9905776 ],\n","       [0.22270663],\n","       [0.9808745 ],\n","       [0.04537309],\n","       [0.18472494],\n","       [0.9223916 ],\n","       [0.9962913 ],\n","       [0.9906561 ],\n","       [0.04882728],\n","       [0.09449835],\n","       [0.899307  ],\n","       [0.998752  ],\n","       [0.12240227],\n","       [0.37479562],\n","       [0.83072764],\n","       [0.37448815]], dtype=float32)"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"Hf7xfFv9PwrF"},"source":["## Activity 1b: Understanding our model's performance on field data"]},{"cell_type":"markdown","metadata":{"id":"VdJhwDjBb1U_"},"source":["### Exercise (Discussion)\n","Discuss this with your instructor:\n","* How did your model do? Did it perform quite as well?\n","* Why do you think it did this way? \n","* **Come up with a few hypotheses for what's different between our test data and our field data!**"]},{"cell_type":"markdown","metadata":{"id":"pILpz1SScRRl"},"source":["## Activity 1c: Error analysis\n","\n","### Understanding where the model did not perform as well"]},{"cell_type":"markdown","metadata":{"id":"vjo7cW5kP14m"},"source":["### Exercise (Coding)"]},{"cell_type":"markdown","metadata":{"id":"pOmLO3M4P3XO"},"source":["Since our `field_data` comes from the field, it's possible that it's different from `train_data` and `test_data` in some important ways!\n","\n","Let's compare a few images. Below, please use a `for` loop and `plot_one_image(data, labels, index)` to print out a few images from the different datasets.\n","\n","**Do you notice any differences in the datasets?**\n","\n","\n"]},{"cell_type":"code","metadata":{"id":"qIXblKdjSnCe","cellView":"both","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1678638997213,"user_tz":420,"elapsed":2550,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"f783a5dd-b806-4b5f-d0e5-cdb259eead24"},"source":["#YOUR CODE HERE\n","for n in range(5):\n","  print(\"Train\")\n","  plot_one_image(train_data, train_labels, n)\n","for n in range(5):\n","  print(\"Field\")\n","  plot_one_image(field_data, field_labels,n)\n","### END CODE"],"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Train\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Train\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Train\n","Label: 1.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Train\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Train\n","Label: 1.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Field\n","Label: 1.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Field\n","Label: 1.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Field\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Field\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Field\n","Label: 0.0\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"45zKW1NjS4aV"},"source":["## Instructor-Led Discussion: What is happening in our field data? \n","\n","Discuss in your group and with your instructor:\n","\n","Why is our model performance suffering? What are reasons that field data could be \"messier\"?"]},{"cell_type":"markdown","metadata":{"id":"1NhR3Mb0Su9U"},"source":["# Milestone 2: Tools to improve your models"]},{"cell_type":"markdown","metadata":{"id":"yhYKVx5nTL2A"},"source":["## Activity 2a"]},{"cell_type":"markdown","metadata":{"id":"EtnanhTdTS34"},"source":["### Instructor-Led Discussion: Data Augmentation\n","\n","We want our model to handle a broader variety of input data. One way to do this is to **augment** our data: by intentionally making some alterations to our input data, we an train our model to handle a greater variety of outputs."]},{"cell_type":"markdown","metadata":{"id":"Riq7peVmkUhA"},"source":["### Exercise (Coding) "]},{"cell_type":"markdown","metadata":{"id":"KZ-CtwWseVu_"},"source":["So, how do we augment our images in Python? \n","\n","\n","We provide custom functions for augmenting a single image. Here's one example, to rotate a single image by 40 degrees. **Experiment with changing the degrees! How can you rotate left?**"]},{"cell_type":"code","metadata":{"id":"AAUxFajRBeC0","colab":{"base_uri":"https://localhost:8080/","height":554},"executionInfo":{"status":"ok","timestamp":1678639156211,"user_tz":420,"elapsed":1063,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"bc0fea2c-dc11-487c-dab7-45199cb2294b"},"source":["image = train_data[0]\n","plot_one_image(image) \n","new_image = rotate(image, rotate = 40)\n","plot_one_image(new_image)"],"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["Label: \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["Label: \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"d1lhczlEHg5y"},"source":["\n","Here's some more image transformation options:\n","* `rotate(image, rotate = 30)`\n","* `scale(image, scale = 1.5)`\n","* `shear(image, shear = 20)`\n","* `flip_left_right(image, prob = 0.5)`\n","* `flip_up_down(image, prob = 0.5)`\n","* `remove_color(data, channel = 0)`\n","\n","Try it out below!"]},{"cell_type":"code","metadata":{"id":"f5FcaWcBHkTj","colab":{"base_uri":"https://localhost:8080/","height":285},"executionInfo":{"status":"ok","timestamp":1678639275752,"user_tz":420,"elapsed":703,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"d726e8ef-703c-49c3-e26e-86ec0a42f54f"},"source":["#YOUR CODE HERE\n","image = train_data[0]\n","plot_one_image(image) \n","new_image = scale(image, scale = 1000)"],"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["Label: \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"7LN3ZQkTBdND"},"source":["Now, experiment with these options!\n","\n","**Share some of your cool augmentation strategies with the class! You can definitely use multiple augmentation techniques for each image!**"]},{"cell_type":"code","metadata":{"id":"EOEkYlf5gquP"},"source":["### YOUR CODE HERE\n","\n","### END CODE"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ihblU152Wapd"},"source":["## Activity 2b. "]},{"cell_type":"markdown","metadata":{"id":"bfVDv1P3abu_"},"source":["### Exercise (Coding)"]},{"cell_type":"markdown","metadata":{"id":"gL9yThE1IZ79"},"source":["Now, let's create some augmented datasets of our own! We'll combine the augmented data with the original. Here's how you make an augmented dataset:"]},{"cell_type":"code","metadata":{"id":"e3kx7OWyIh4k","executionInfo":{"status":"ok","timestamp":1678639475877,"user_tz":420,"elapsed":1836,"user":{"displayName":"Adham","userId":"04961045654033668196"}}},"source":["train_data_rotated_10 = rotate(train_data, rotate=10)"],"execution_count":23,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"JPZ5862WI-rP"},"source":["Please make some more augmented datasets below!"]},{"cell_type":"code","metadata":{"id":"ZSa-lSC4JDxO","executionInfo":{"status":"ok","timestamp":1678640435543,"user_tz":420,"elapsed":7013,"user":{"displayName":"Adham","userId":"04961045654033668196"}}},"source":["train_data_rotated_10 = rotate(train_data, rotate=10)\n","\n","###YOUR CODE HERE to create more augmented datasets\n","train_data_scaled_1_5 = scale(train_data, scale = 1.5)\n","train_data_sheared_20 = shear(train_data,shear = 20)\n"],"execution_count":32,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eNX_jC9eIJFL"},"source":["\n","\n","Finally, to combine your original train data with your augmented data, you can use the `combine_data` function like this:\n","```\n","all_data, all_labels = combine_data([data1, data2], [labels1, labels2])\n","``` \n","\n","(You can include as many datasets as you like in the list. What should you use for the new labels?)\n","\n","Please create `all_data` and `all_labels` below:"]},{"cell_type":"code","metadata":{"id":"4C7yqCoAW5qs","executionInfo":{"status":"ok","timestamp":1678640414037,"user_tz":420,"elapsed":1327,"user":{"displayName":"Adham","userId":"04961045654033668196"}}},"source":["#YOUR CODE HERE\n","train_data, train_labels = combine_data([train_data_scaled_1_5, train_data_sheared_20], [train_labels ,train_labels])\n","### END CODE"],"execution_count":31,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"n4y0BFbJYf1k"},"source":["Once you've created your augmented data...\n","1. Train your CNN on `all_data` \n","2. Choose the best epoch based on the `test_data`! \n","3. Load your model up and score it on `field_data`. \n","\n","**Your challenge is to find a set of augmentations that improves your model's performance on the `field_data`! Share your augmentations and performances with the class! Try as many or as few augmentations as you want.**\n","\n","**Remember to record an average of 5 newly initialized CNNs. This is important because CNN weights will be initialized differently in each run!**"]},{"cell_type":"code","metadata":{"id":"v453qnBB-Y9e","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678640889632,"user_tz":420,"elapsed":186089,"user":{"displayName":"Adham","userId":"04961045654033668196"}},"outputId":"43ec018a-2875-4eaa-d174-a40b7aec5db9"},"source":["train_data, train_labels = get_train_data()\n","test_data, test_labels   = get_test_data()\n","field_data, field_labels   = get_field_data()\n","import numpy as np\n","accuracy_List = []\n","for i in range (5):\n","  cnn = CNNClassifier(num_hidden_layers = 2)\n","  cnn_history = cnn.fit(train_data, train_labels, epochs = 50, validation_data = (test_data, test_labels), shuffle = True, callbacks = [monitor])\n","  field_preds = cnn.predict(field_data) > 0.5\n","  accuracy_score(field_labels,field_preds)\n","print(np.mean(accuracy_List))\n","\n","\n","### END CODE"],"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","63/63 [==============================] - 2s 12ms/step - loss: 1.9999 - accuracy: 0.5420 - val_loss: 1.9915 - val_accuracy: 0.5375\n","Epoch 2/50\n","63/63 [==============================] - 1s 14ms/step - loss: 1.9781 - accuracy: 0.5695 - val_loss: 1.9659 - val_accuracy: 0.7525\n","Epoch 3/50\n","63/63 [==============================] - 1s 17ms/step - loss: 1.9509 - accuracy: 0.6170 - val_loss: 1.9414 - val_accuracy: 0.8000\n","Epoch 4/50\n","63/63 [==============================] - 1s 18ms/step - loss: 1.9245 - accuracy: 0.6620 - val_loss: 1.9149 - val_accuracy: 0.7775\n","Epoch 5/50\n","63/63 [==============================] - 1s 15ms/step - loss: 1.8982 - accuracy: 0.6785 - val_loss: 1.8904 - val_accuracy: 0.8025\n","Epoch 6/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.8692 - accuracy: 0.7340 - val_loss: 1.8616 - val_accuracy: 0.7750\n","Epoch 7/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.8415 - accuracy: 0.7375 - val_loss: 1.8373 - val_accuracy: 0.8200\n","Epoch 8/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.8127 - accuracy: 0.7605 - val_loss: 1.8098 - val_accuracy: 0.8400\n","Epoch 9/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7851 - accuracy: 0.7700 - val_loss: 1.7926 - val_accuracy: 0.7750\n","Epoch 10/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7524 - accuracy: 0.7895 - val_loss: 1.7624 - val_accuracy: 0.8050\n","Epoch 11/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.7316 - accuracy: 0.7890 - val_loss: 1.7291 - val_accuracy: 0.8400\n","Epoch 12/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7108 - accuracy: 0.7960 - val_loss: 1.7185 - val_accuracy: 0.7775\n","Epoch 13/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6738 - accuracy: 0.8130 - val_loss: 1.6793 - val_accuracy: 0.8425\n","Epoch 14/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6506 - accuracy: 0.8140 - val_loss: 1.6757 - val_accuracy: 0.7775\n","Epoch 15/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.6314 - accuracy: 0.8290 - val_loss: 1.6350 - val_accuracy: 0.8400\n","Epoch 16/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.6123 - accuracy: 0.8235 - val_loss: 1.6229 - val_accuracy: 0.8100\n","Epoch 17/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5775 - accuracy: 0.8460 - val_loss: 1.5940 - val_accuracy: 0.8225\n","Epoch 18/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5468 - accuracy: 0.8440 - val_loss: 1.5811 - val_accuracy: 0.8075\n","Epoch 19/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.5334 - accuracy: 0.8490 - val_loss: 1.5472 - val_accuracy: 0.8475\n","Epoch 20/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5159 - accuracy: 0.8570 - val_loss: 1.5230 - val_accuracy: 0.8500\n","Epoch 21/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4951 - accuracy: 0.8560 - val_loss: 1.5111 - val_accuracy: 0.8475\n","Epoch 22/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4708 - accuracy: 0.8650 - val_loss: 1.5146 - val_accuracy: 0.8050\n","Epoch 23/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4496 - accuracy: 0.8720 - val_loss: 1.4590 - val_accuracy: 0.8700\n","Epoch 24/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4223 - accuracy: 0.8830 - val_loss: 1.4551 - val_accuracy: 0.8625\n","Epoch 25/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.4171 - accuracy: 0.8755 - val_loss: 1.4521 - val_accuracy: 0.8475\n","Epoch 26/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.3845 - accuracy: 0.8845 - val_loss: 1.4458 - val_accuracy: 0.8200\n","Epoch 27/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.3763 - accuracy: 0.8880 - val_loss: 1.4276 - val_accuracy: 0.8300\n","Epoch 28/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.3571 - accuracy: 0.8865 - val_loss: 1.4094 - val_accuracy: 0.8450\n","Epoch 29/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3426 - accuracy: 0.8840 - val_loss: 1.3979 - val_accuracy: 0.8475\n","Epoch 30/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3245 - accuracy: 0.8945 - val_loss: 1.4580 - val_accuracy: 0.7475\n","Epoch 31/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.3131 - accuracy: 0.8915 - val_loss: 1.3781 - val_accuracy: 0.8350\n","Epoch 32/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2992 - accuracy: 0.9000 - val_loss: 1.3510 - val_accuracy: 0.8625\n","Epoch 33/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2845 - accuracy: 0.8960 - val_loss: 1.3507 - val_accuracy: 0.8450\n","Epoch 34/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2606 - accuracy: 0.9070 - val_loss: 1.3652 - val_accuracy: 0.8200\n","Epoch 35/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2466 - accuracy: 0.9070 - val_loss: 1.3883 - val_accuracy: 0.7800\n","Epoch 36/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2340 - accuracy: 0.9080 - val_loss: 1.3741 - val_accuracy: 0.7950\n","Epoch 37/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2226 - accuracy: 0.9030 - val_loss: 1.3950 - val_accuracy: 0.7625\n","Epoch 38/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2137 - accuracy: 0.9155 - val_loss: 1.3256 - val_accuracy: 0.8250\n","Epoch 39/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2084 - accuracy: 0.9075 - val_loss: 1.2729 - val_accuracy: 0.8650\n","Epoch 40/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1785 - accuracy: 0.9220 - val_loss: 1.2783 - val_accuracy: 0.8475\n","Epoch 41/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1774 - accuracy: 0.9220 - val_loss: 1.2542 - val_accuracy: 0.8625\n","Epoch 42/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1643 - accuracy: 0.9205 - val_loss: 1.2869 - val_accuracy: 0.8225\n","Epoch 43/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1484 - accuracy: 0.9245 - val_loss: 1.3004 - val_accuracy: 0.8150\n","Epoch 44/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1380 - accuracy: 0.9200 - val_loss: 1.2268 - val_accuracy: 0.8650\n","Epoch 45/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1265 - accuracy: 0.9275 - val_loss: 1.2200 - val_accuracy: 0.8600\n","Epoch 46/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1206 - accuracy: 0.9280 - val_loss: 1.2271 - val_accuracy: 0.8500\n","Epoch 47/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1037 - accuracy: 0.9310 - val_loss: 1.2400 - val_accuracy: 0.8250\n","Epoch 48/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.0924 - accuracy: 0.9320 - val_loss: 1.2530 - val_accuracy: 0.8175\n","Epoch 49/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0830 - accuracy: 0.9340 - val_loss: 1.2212 - val_accuracy: 0.8250\n","Epoch 50/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0814 - accuracy: 0.9300 - val_loss: 1.2660 - val_accuracy: 0.8100\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/50\n","63/63 [==============================] - 2s 12ms/step - loss: 2.0320 - accuracy: 0.5345 - val_loss: 2.0174 - val_accuracy: 0.7150\n","Epoch 2/50\n","63/63 [==============================] - 0s 8ms/step - loss: 2.0059 - accuracy: 0.5885 - val_loss: 1.9886 - val_accuracy: 0.6050\n","Epoch 3/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9762 - accuracy: 0.6345 - val_loss: 1.9593 - val_accuracy: 0.7675\n","Epoch 4/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9470 - accuracy: 0.6615 - val_loss: 1.9325 - val_accuracy: 0.8300\n","Epoch 5/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9173 - accuracy: 0.7065 - val_loss: 1.9090 - val_accuracy: 0.7975\n","Epoch 6/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8928 - accuracy: 0.7185 - val_loss: 1.8793 - val_accuracy: 0.8200\n","Epoch 7/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.8649 - accuracy: 0.7385 - val_loss: 1.8528 - val_accuracy: 0.8250\n","Epoch 8/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8305 - accuracy: 0.7515 - val_loss: 1.8235 - val_accuracy: 0.8300\n","Epoch 9/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.8048 - accuracy: 0.7665 - val_loss: 1.8062 - val_accuracy: 0.7900\n","Epoch 10/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7801 - accuracy: 0.7870 - val_loss: 1.7793 - val_accuracy: 0.7975\n","Epoch 11/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7544 - accuracy: 0.7945 - val_loss: 1.7555 - val_accuracy: 0.7925\n","Epoch 12/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7227 - accuracy: 0.8140 - val_loss: 1.7190 - val_accuracy: 0.8475\n","Epoch 13/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6943 - accuracy: 0.8150 - val_loss: 1.7054 - val_accuracy: 0.7950\n","Epoch 14/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6628 - accuracy: 0.8320 - val_loss: 1.6631 - val_accuracy: 0.8575\n","Epoch 15/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6479 - accuracy: 0.8265 - val_loss: 1.6397 - val_accuracy: 0.8600\n","Epoch 16/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6234 - accuracy: 0.8255 - val_loss: 1.6200 - val_accuracy: 0.8525\n","Epoch 17/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.5955 - accuracy: 0.8455 - val_loss: 1.6030 - val_accuracy: 0.8350\n","Epoch 18/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5668 - accuracy: 0.8475 - val_loss: 1.6054 - val_accuracy: 0.7975\n","Epoch 19/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5524 - accuracy: 0.8605 - val_loss: 1.5658 - val_accuracy: 0.8375\n","Epoch 20/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5299 - accuracy: 0.8645 - val_loss: 1.5515 - val_accuracy: 0.8250\n","Epoch 21/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5026 - accuracy: 0.8625 - val_loss: 1.5153 - val_accuracy: 0.8525\n","Epoch 22/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4790 - accuracy: 0.8725 - val_loss: 1.4991 - val_accuracy: 0.8550\n","Epoch 23/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4592 - accuracy: 0.8730 - val_loss: 1.5265 - val_accuracy: 0.7900\n","Epoch 24/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4382 - accuracy: 0.8725 - val_loss: 1.4741 - val_accuracy: 0.8525\n","Epoch 25/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4209 - accuracy: 0.8815 - val_loss: 1.4519 - val_accuracy: 0.8600\n","Epoch 26/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4029 - accuracy: 0.8860 - val_loss: 1.4382 - val_accuracy: 0.8625\n","Epoch 27/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3947 - accuracy: 0.8760 - val_loss: 1.4211 - val_accuracy: 0.8725\n","Epoch 28/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3621 - accuracy: 0.8970 - val_loss: 1.4147 - val_accuracy: 0.8525\n","Epoch 29/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3576 - accuracy: 0.8965 - val_loss: 1.3914 - val_accuracy: 0.8725\n","Epoch 30/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3378 - accuracy: 0.8955 - val_loss: 1.4035 - val_accuracy: 0.8425\n","Epoch 31/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3231 - accuracy: 0.9015 - val_loss: 1.3924 - val_accuracy: 0.8425\n","Epoch 32/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2987 - accuracy: 0.9110 - val_loss: 1.3950 - val_accuracy: 0.8250\n","Epoch 33/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2876 - accuracy: 0.9055 - val_loss: 1.4122 - val_accuracy: 0.8075\n","Epoch 34/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2799 - accuracy: 0.9030 - val_loss: 1.3220 - val_accuracy: 0.8825\n","Epoch 35/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2646 - accuracy: 0.9070 - val_loss: 1.3570 - val_accuracy: 0.8250\n","Epoch 36/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2397 - accuracy: 0.9155 - val_loss: 1.3335 - val_accuracy: 0.8500\n","Epoch 37/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2224 - accuracy: 0.9185 - val_loss: 1.2851 - val_accuracy: 0.8800\n","Epoch 38/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2206 - accuracy: 0.9160 - val_loss: 1.3700 - val_accuracy: 0.8050\n","Epoch 39/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2091 - accuracy: 0.9220 - val_loss: 1.2923 - val_accuracy: 0.8575\n","Epoch 40/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.1942 - accuracy: 0.9250 - val_loss: 1.3000 - val_accuracy: 0.8425\n","Epoch 41/50\n","63/63 [==============================] - 1s 13ms/step - loss: 1.1865 - accuracy: 0.9200 - val_loss: 1.2638 - val_accuracy: 0.8775\n","Epoch 42/50\n","63/63 [==============================] - 1s 13ms/step - loss: 1.1739 - accuracy: 0.9245 - val_loss: 1.2474 - val_accuracy: 0.8850\n","Epoch 43/50\n","63/63 [==============================] - 1s 13ms/step - loss: 1.1539 - accuracy: 0.9320 - val_loss: 1.2646 - val_accuracy: 0.8450\n","Epoch 44/50\n","63/63 [==============================] - 1s 12ms/step - loss: 1.1359 - accuracy: 0.9370 - val_loss: 1.2478 - val_accuracy: 0.8500\n","Epoch 45/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1362 - accuracy: 0.9230 - val_loss: 1.2764 - val_accuracy: 0.8250\n","Epoch 46/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1179 - accuracy: 0.9365 - val_loss: 1.2763 - val_accuracy: 0.8225\n","Epoch 47/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1176 - accuracy: 0.9300 - val_loss: 1.2692 - val_accuracy: 0.8250\n","Epoch 48/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1093 - accuracy: 0.9260 - val_loss: 1.2620 - val_accuracy: 0.8275\n","Epoch 49/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0948 - accuracy: 0.9305 - val_loss: 1.2232 - val_accuracy: 0.8350\n","Epoch 50/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0780 - accuracy: 0.9365 - val_loss: 1.2827 - val_accuracy: 0.8050\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/50\n","63/63 [==============================] - 1s 11ms/step - loss: 2.0271 - accuracy: 0.5540 - val_loss: 2.0068 - val_accuracy: 0.7225\n","Epoch 2/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9952 - accuracy: 0.6025 - val_loss: 1.9746 - val_accuracy: 0.7775\n","Epoch 3/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9629 - accuracy: 0.6545 - val_loss: 1.9472 - val_accuracy: 0.7975\n","Epoch 4/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.9337 - accuracy: 0.6785 - val_loss: 1.9189 - val_accuracy: 0.8200\n","Epoch 5/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9002 - accuracy: 0.7115 - val_loss: 1.8904 - val_accuracy: 0.8025\n","Epoch 6/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.8687 - accuracy: 0.7325 - val_loss: 1.8638 - val_accuracy: 0.7800\n","Epoch 7/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.8326 - accuracy: 0.7625 - val_loss: 1.8338 - val_accuracy: 0.7900\n","Epoch 8/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8149 - accuracy: 0.7775 - val_loss: 1.8109 - val_accuracy: 0.7775\n","Epoch 9/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7794 - accuracy: 0.7800 - val_loss: 1.7722 - val_accuracy: 0.8375\n","Epoch 10/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7552 - accuracy: 0.7890 - val_loss: 1.7673 - val_accuracy: 0.7550\n","Epoch 11/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.7165 - accuracy: 0.8045 - val_loss: 1.7391 - val_accuracy: 0.7625\n","Epoch 12/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.6960 - accuracy: 0.8095 - val_loss: 1.6911 - val_accuracy: 0.8500\n","Epoch 13/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.6719 - accuracy: 0.8145 - val_loss: 1.6897 - val_accuracy: 0.7675\n","Epoch 14/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.6423 - accuracy: 0.8175 - val_loss: 1.6407 - val_accuracy: 0.8550\n","Epoch 15/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.6193 - accuracy: 0.8385 - val_loss: 1.6283 - val_accuracy: 0.8200\n","Epoch 16/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.5909 - accuracy: 0.8475 - val_loss: 1.5992 - val_accuracy: 0.8525\n","Epoch 17/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5687 - accuracy: 0.8500 - val_loss: 1.5849 - val_accuracy: 0.8200\n","Epoch 18/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5411 - accuracy: 0.8505 - val_loss: 1.5574 - val_accuracy: 0.8350\n","Epoch 19/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.5221 - accuracy: 0.8700 - val_loss: 1.5277 - val_accuracy: 0.8600\n","Epoch 20/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.4949 - accuracy: 0.8655 - val_loss: 1.5324 - val_accuracy: 0.8075\n","Epoch 21/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4862 - accuracy: 0.8620 - val_loss: 1.4928 - val_accuracy: 0.8625\n","Epoch 22/50\n","63/63 [==============================] - 1s 15ms/step - loss: 1.4446 - accuracy: 0.8795 - val_loss: 1.4896 - val_accuracy: 0.8375\n","Epoch 23/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4383 - accuracy: 0.8860 - val_loss: 1.4797 - val_accuracy: 0.8325\n","Epoch 24/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4151 - accuracy: 0.8865 - val_loss: 1.4439 - val_accuracy: 0.8475\n","Epoch 25/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3974 - accuracy: 0.8840 - val_loss: 1.4573 - val_accuracy: 0.8225\n","Epoch 26/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3836 - accuracy: 0.8805 - val_loss: 1.4119 - val_accuracy: 0.8550\n","Epoch 27/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3646 - accuracy: 0.8905 - val_loss: 1.4106 - val_accuracy: 0.8500\n","Epoch 28/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.3346 - accuracy: 0.8970 - val_loss: 1.4010 - val_accuracy: 0.8350\n","Epoch 29/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3179 - accuracy: 0.9080 - val_loss: 1.3697 - val_accuracy: 0.8600\n","Epoch 30/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3139 - accuracy: 0.8930 - val_loss: 1.3984 - val_accuracy: 0.8175\n","Epoch 31/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2965 - accuracy: 0.8990 - val_loss: 1.3993 - val_accuracy: 0.8075\n","Epoch 32/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2735 - accuracy: 0.9060 - val_loss: 1.3722 - val_accuracy: 0.8275\n","Epoch 33/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2705 - accuracy: 0.9100 - val_loss: 1.3387 - val_accuracy: 0.8475\n","Epoch 34/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2473 - accuracy: 0.9105 - val_loss: 1.3286 - val_accuracy: 0.8450\n","Epoch 35/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2329 - accuracy: 0.9140 - val_loss: 1.3044 - val_accuracy: 0.8525\n","Epoch 36/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2276 - accuracy: 0.9160 - val_loss: 1.2950 - val_accuracy: 0.8575\n","Epoch 37/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.2149 - accuracy: 0.9150 - val_loss: 1.3147 - val_accuracy: 0.8400\n","Epoch 38/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1960 - accuracy: 0.9165 - val_loss: 1.2512 - val_accuracy: 0.8775\n","Epoch 39/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1853 - accuracy: 0.9150 - val_loss: 1.2935 - val_accuracy: 0.8400\n","Epoch 40/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1595 - accuracy: 0.9190 - val_loss: 1.2191 - val_accuracy: 0.8825\n","Epoch 41/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1603 - accuracy: 0.9230 - val_loss: 1.2881 - val_accuracy: 0.8275\n","Epoch 42/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1535 - accuracy: 0.9230 - val_loss: 1.2577 - val_accuracy: 0.8425\n","Epoch 43/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1341 - accuracy: 0.9250 - val_loss: 1.2192 - val_accuracy: 0.8600\n","Epoch 44/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1143 - accuracy: 0.9285 - val_loss: 1.2363 - val_accuracy: 0.8425\n","Epoch 45/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1121 - accuracy: 0.9285 - val_loss: 1.2966 - val_accuracy: 0.8025\n","Epoch 46/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0989 - accuracy: 0.9300 - val_loss: 1.3630 - val_accuracy: 0.7600\n","Epoch 47/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0790 - accuracy: 0.9315 - val_loss: 1.2500 - val_accuracy: 0.8300\n","Epoch 48/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.0681 - accuracy: 0.9345 - val_loss: 1.3611 - val_accuracy: 0.7675\n","Epoch 49/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0630 - accuracy: 0.9380 - val_loss: 1.2312 - val_accuracy: 0.8325\n","Epoch 50/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0548 - accuracy: 0.9370 - val_loss: 1.2870 - val_accuracy: 0.7875\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/50\n","63/63 [==============================] - 1s 11ms/step - loss: 2.0215 - accuracy: 0.5325 - val_loss: 2.0079 - val_accuracy: 0.5300\n","Epoch 2/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.9923 - accuracy: 0.5610 - val_loss: 1.9803 - val_accuracy: 0.6950\n","Epoch 3/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9616 - accuracy: 0.6415 - val_loss: 1.9454 - val_accuracy: 0.7950\n","Epoch 4/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.9324 - accuracy: 0.6470 - val_loss: 1.9200 - val_accuracy: 0.8225\n","Epoch 5/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.9016 - accuracy: 0.6870 - val_loss: 1.8934 - val_accuracy: 0.8275\n","Epoch 6/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.8745 - accuracy: 0.7165 - val_loss: 1.8657 - val_accuracy: 0.8000\n","Epoch 7/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.8413 - accuracy: 0.7265 - val_loss: 1.8366 - val_accuracy: 0.8000\n","Epoch 8/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8182 - accuracy: 0.7470 - val_loss: 1.8112 - val_accuracy: 0.8400\n","Epoch 9/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7935 - accuracy: 0.7620 - val_loss: 1.7844 - val_accuracy: 0.8400\n","Epoch 10/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7631 - accuracy: 0.7660 - val_loss: 1.7568 - val_accuracy: 0.8425\n","Epoch 11/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7351 - accuracy: 0.7780 - val_loss: 1.7322 - val_accuracy: 0.8500\n","Epoch 12/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.7085 - accuracy: 0.7850 - val_loss: 1.7214 - val_accuracy: 0.8200\n","Epoch 13/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6870 - accuracy: 0.7875 - val_loss: 1.6824 - val_accuracy: 0.8525\n","Epoch 14/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.6610 - accuracy: 0.8010 - val_loss: 1.6625 - val_accuracy: 0.8525\n","Epoch 15/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.6343 - accuracy: 0.8075 - val_loss: 1.6328 - val_accuracy: 0.8550\n","Epoch 16/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6098 - accuracy: 0.8260 - val_loss: 1.6165 - val_accuracy: 0.8550\n","Epoch 17/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5948 - accuracy: 0.8170 - val_loss: 1.6150 - val_accuracy: 0.8075\n","Epoch 18/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.5694 - accuracy: 0.8425 - val_loss: 1.5638 - val_accuracy: 0.8725\n","Epoch 19/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5399 - accuracy: 0.8480 - val_loss: 1.5620 - val_accuracy: 0.8325\n","Epoch 20/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.5227 - accuracy: 0.8550 - val_loss: 1.5243 - val_accuracy: 0.8725\n","Epoch 21/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5081 - accuracy: 0.8430 - val_loss: 1.5348 - val_accuracy: 0.8275\n","Epoch 22/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4712 - accuracy: 0.8590 - val_loss: 1.4917 - val_accuracy: 0.8625\n","Epoch 23/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4547 - accuracy: 0.8645 - val_loss: 1.4819 - val_accuracy: 0.8550\n","Epoch 24/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4347 - accuracy: 0.8705 - val_loss: 1.4786 - val_accuracy: 0.8300\n","Epoch 25/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4032 - accuracy: 0.8735 - val_loss: 1.4089 - val_accuracy: 0.8775\n","Epoch 26/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4027 - accuracy: 0.8730 - val_loss: 1.4093 - val_accuracy: 0.8750\n","Epoch 27/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.3683 - accuracy: 0.8875 - val_loss: 1.4405 - val_accuracy: 0.8100\n","Epoch 28/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.3614 - accuracy: 0.8820 - val_loss: 1.4042 - val_accuracy: 0.8475\n","Epoch 29/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.3331 - accuracy: 0.8970 - val_loss: 1.3579 - val_accuracy: 0.8775\n","Epoch 30/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.3277 - accuracy: 0.8850 - val_loss: 1.3938 - val_accuracy: 0.8225\n","Epoch 31/50\n","63/63 [==============================] - 1s 17ms/step - loss: 1.3044 - accuracy: 0.8960 - val_loss: 1.3473 - val_accuracy: 0.8675\n","Epoch 32/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2950 - accuracy: 0.8920 - val_loss: 1.4192 - val_accuracy: 0.7525\n","Epoch 33/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2728 - accuracy: 0.8945 - val_loss: 1.3536 - val_accuracy: 0.8250\n","Epoch 34/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2611 - accuracy: 0.8920 - val_loss: 1.4261 - val_accuracy: 0.7400\n","Epoch 35/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2493 - accuracy: 0.8955 - val_loss: 1.3364 - val_accuracy: 0.8250\n","Epoch 36/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2260 - accuracy: 0.9045 - val_loss: 1.2732 - val_accuracy: 0.8775\n","Epoch 37/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2168 - accuracy: 0.9035 - val_loss: 1.2967 - val_accuracy: 0.8450\n","Epoch 38/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2037 - accuracy: 0.9045 - val_loss: 1.3380 - val_accuracy: 0.7875\n","Epoch 39/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1950 - accuracy: 0.9035 - val_loss: 1.3195 - val_accuracy: 0.8000\n","Epoch 40/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1761 - accuracy: 0.9080 - val_loss: 1.3437 - val_accuracy: 0.7725\n","Epoch 41/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1636 - accuracy: 0.9105 - val_loss: 1.2627 - val_accuracy: 0.8350\n","Epoch 42/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1488 - accuracy: 0.9205 - val_loss: 1.2459 - val_accuracy: 0.8450\n","Epoch 43/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1358 - accuracy: 0.9150 - val_loss: 1.2030 - val_accuracy: 0.8725\n","Epoch 44/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1264 - accuracy: 0.9180 - val_loss: 1.2350 - val_accuracy: 0.8350\n","Epoch 45/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1058 - accuracy: 0.9255 - val_loss: 1.2087 - val_accuracy: 0.8550\n","Epoch 46/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0969 - accuracy: 0.9250 - val_loss: 1.2532 - val_accuracy: 0.8025\n","Epoch 47/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0918 - accuracy: 0.9255 - val_loss: 1.1831 - val_accuracy: 0.8625\n","Epoch 48/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0803 - accuracy: 0.9280 - val_loss: 1.1709 - val_accuracy: 0.8675\n","Epoch 49/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.0621 - accuracy: 0.9280 - val_loss: 1.1598 - val_accuracy: 0.8700\n","Epoch 50/50\n","63/63 [==============================] - 1s 11ms/step - loss: 1.0598 - accuracy: 0.9260 - val_loss: 1.1623 - val_accuracy: 0.8600\n","13/13 [==============================] - 0s 3ms/step\n","Epoch 1/50\n","63/63 [==============================] - 2s 12ms/step - loss: 2.0034 - accuracy: 0.5335 - val_loss: 1.9854 - val_accuracy: 0.7525\n","Epoch 2/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9746 - accuracy: 0.5900 - val_loss: 1.9580 - val_accuracy: 0.8025\n","Epoch 3/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9372 - accuracy: 0.6465 - val_loss: 1.9243 - val_accuracy: 0.7675\n","Epoch 4/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.9039 - accuracy: 0.7070 - val_loss: 1.9019 - val_accuracy: 0.7550\n","Epoch 5/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8777 - accuracy: 0.7160 - val_loss: 1.8766 - val_accuracy: 0.7775\n","Epoch 6/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8453 - accuracy: 0.7500 - val_loss: 1.8348 - val_accuracy: 0.8275\n","Epoch 7/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.8131 - accuracy: 0.7630 - val_loss: 1.8078 - val_accuracy: 0.8400\n","Epoch 8/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7858 - accuracy: 0.7915 - val_loss: 1.7788 - val_accuracy: 0.8250\n","Epoch 9/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7558 - accuracy: 0.7965 - val_loss: 1.7598 - val_accuracy: 0.8225\n","Epoch 10/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.7266 - accuracy: 0.8085 - val_loss: 1.7239 - val_accuracy: 0.8125\n","Epoch 11/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6965 - accuracy: 0.8180 - val_loss: 1.7058 - val_accuracy: 0.8175\n","Epoch 12/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6746 - accuracy: 0.8210 - val_loss: 1.6742 - val_accuracy: 0.8500\n","Epoch 13/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6386 - accuracy: 0.8300 - val_loss: 1.6651 - val_accuracy: 0.8025\n","Epoch 14/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.6206 - accuracy: 0.8320 - val_loss: 1.6257 - val_accuracy: 0.8500\n","Epoch 15/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.5923 - accuracy: 0.8335 - val_loss: 1.6272 - val_accuracy: 0.7975\n","Epoch 16/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5670 - accuracy: 0.8500 - val_loss: 1.5862 - val_accuracy: 0.8525\n","Epoch 17/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5431 - accuracy: 0.8560 - val_loss: 1.5921 - val_accuracy: 0.7825\n","Epoch 18/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5197 - accuracy: 0.8635 - val_loss: 1.5462 - val_accuracy: 0.8425\n","Epoch 19/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.5046 - accuracy: 0.8615 - val_loss: 1.5597 - val_accuracy: 0.7875\n","Epoch 20/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4777 - accuracy: 0.8695 - val_loss: 1.5198 - val_accuracy: 0.8350\n","Epoch 21/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4564 - accuracy: 0.8795 - val_loss: 1.5170 - val_accuracy: 0.8075\n","Epoch 22/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4434 - accuracy: 0.8765 - val_loss: 1.4535 - val_accuracy: 0.8625\n","Epoch 23/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.4187 - accuracy: 0.8860 - val_loss: 1.4580 - val_accuracy: 0.8600\n","Epoch 24/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.4078 - accuracy: 0.8800 - val_loss: 1.4512 - val_accuracy: 0.8450\n","Epoch 25/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.3860 - accuracy: 0.8725 - val_loss: 1.4726 - val_accuracy: 0.7925\n","Epoch 26/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3652 - accuracy: 0.8830 - val_loss: 1.4291 - val_accuracy: 0.8400\n","Epoch 27/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3463 - accuracy: 0.8930 - val_loss: 1.4191 - val_accuracy: 0.8350\n","Epoch 28/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3334 - accuracy: 0.8860 - val_loss: 1.4210 - val_accuracy: 0.8250\n","Epoch 29/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.3189 - accuracy: 0.8990 - val_loss: 1.3813 - val_accuracy: 0.8550\n","Epoch 30/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2949 - accuracy: 0.9060 - val_loss: 1.3725 - val_accuracy: 0.8375\n","Epoch 31/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2858 - accuracy: 0.9000 - val_loss: 1.4203 - val_accuracy: 0.7725\n","Epoch 32/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2636 - accuracy: 0.9090 - val_loss: 1.3695 - val_accuracy: 0.8275\n","Epoch 33/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2506 - accuracy: 0.9105 - val_loss: 1.3209 - val_accuracy: 0.8675\n","Epoch 34/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2410 - accuracy: 0.9075 - val_loss: 1.3100 - val_accuracy: 0.8675\n","Epoch 35/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.2208 - accuracy: 0.9130 - val_loss: 1.3284 - val_accuracy: 0.8325\n","Epoch 36/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.2141 - accuracy: 0.9115 - val_loss: 1.3490 - val_accuracy: 0.8100\n","Epoch 37/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.2034 - accuracy: 0.9195 - val_loss: 1.2830 - val_accuracy: 0.8625\n","Epoch 38/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1842 - accuracy: 0.9220 - val_loss: 1.2411 - val_accuracy: 0.8750\n","Epoch 39/50\n","63/63 [==============================] - 1s 9ms/step - loss: 1.1758 - accuracy: 0.9255 - val_loss: 1.3593 - val_accuracy: 0.7775\n","Epoch 40/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1616 - accuracy: 0.9220 - val_loss: 1.2468 - val_accuracy: 0.8625\n","Epoch 41/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1548 - accuracy: 0.9190 - val_loss: 1.2475 - val_accuracy: 0.8500\n","Epoch 42/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1374 - accuracy: 0.9225 - val_loss: 1.2254 - val_accuracy: 0.8600\n","Epoch 43/50\n","63/63 [==============================] - 1s 10ms/step - loss: 1.1269 - accuracy: 0.9230 - val_loss: 1.2163 - val_accuracy: 0.8650\n","Epoch 44/50\n","63/63 [==============================] - 0s 8ms/step - loss: 1.1119 - accuracy: 0.9250 - val_loss: 1.2141 - val_accuracy: 0.8500\n","Epoch 45/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.1115 - accuracy: 0.9260 - val_loss: 1.3080 - val_accuracy: 0.7925\n","Epoch 46/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0923 - accuracy: 0.9290 - val_loss: 1.1885 - val_accuracy: 0.8625\n","Epoch 47/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0844 - accuracy: 0.9330 - val_loss: 1.1517 - val_accuracy: 0.8775\n","Epoch 48/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0726 - accuracy: 0.9300 - val_loss: 1.2297 - val_accuracy: 0.8250\n","Epoch 49/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0656 - accuracy: 0.9380 - val_loss: 1.1998 - val_accuracy: 0.8400\n","Epoch 50/50\n","63/63 [==============================] - 1s 8ms/step - loss: 1.0457 - accuracy: 0.9370 - val_loss: 1.2890 - val_accuracy: 0.7900\n","13/13 [==============================] - 0s 3ms/step\n","nan\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.9/dist-packages/numpy/core/fromnumeric.py:3474: RuntimeWarning: Mean of empty slice.\n","  return _methods._mean(a, axis=axis, dtype=dtype,\n","/usr/local/lib/python3.9/dist-packages/numpy/core/_methods.py:189: RuntimeWarning: invalid value encountered in double_scalars\n","  ret = ret.dtype.type(ret / rcount)\n"]}]},{"cell_type":"markdown","metadata":{"id":"zz1pSff8xXWk"},"source":["## Instructor-Led Discussion: Why does data augmentation improve average performance?"]},{"cell_type":"markdown","metadata":{"id":"_LkaHktp2L01"},"source":["![](https://storage.googleapis.com/kaggle-competitions/kaggle/10338/logos/header.png)"]},{"cell_type":"markdown","metadata":{"id":"NE5Xu9QRKydm"},"source":["##Congratulations on completing your model!\n","\n","By augmenting your data, you've (hopefully) gotten your models working better, even on messy field data!\n","\n","As a further challenge, you can return to any point in the challenge and try to improve:\n","- Try looking at the CNN code in the hidden cell at the top. Can you change the parameters to reduce overfitting?\n","- Try out different classifiers from Scikit-learn with augmented data.\n","- Create new combinations of augmentations for your data.\n","- Whatever ideas you come up with!"]}]}